{"ast":null,"code":"import { addRopeBrandToOrder, addRopeToOrder, addShopId } from \"./actions\";\nexport const addRopeOrder = (color_id, quantity, ropesOrder) => dispatch => {\n  if (ropesOrder) {\n    const order = {};\n    dispatch(addRopeToOrder(color_id, quantity));\n  }\n};\nexport const ropesOrderOperation = (order, color_id, quantity) => dispatch => {\n  if (order.length >= 1) {\n    order = order.filter(item => {\n      return item.color_id !== color_id;\n    });\n    dispatch(addRopeToOrder([...order, {\n      color_id,\n      quantity\n    }]));\n  } else {\n    dispatch(addRopeToOrder([{\n      color_id,\n      quantity\n    }]));\n  }\n};\nexport const setAddressOperation = () => dispatch => {};\nexport const setOrderBrandOperation = (brand, id) => dispatch => {\n  dispatch(addRopeBrandToOrder({\n    brand,\n    id\n  }));\n};\nexport const setShopAddressOperation = shop_id => dispatch => {\n  dispatch(addShopId(shop_id));\n};","map":{"version":3,"sources":["/Users/etimur/Desktop/vdsh/client/src/store/ropesOrder/operations.js"],"names":["addRopeBrandToOrder","addRopeToOrder","addShopId","addRopeOrder","color_id","quantity","ropesOrder","dispatch","order","ropesOrderOperation","length","filter","item","setAddressOperation","setOrderBrandOperation","brand","id","setShopAddressOperation","shop_id"],"mappings":"AAAA,SAAQA,mBAAR,EAA6BC,cAA7B,EAA6CC,SAA7C,QAA6D,WAA7D;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,QAAX,EAAqBC,UAArB,KAAoCC,QAAQ,IAAI;AACxE,MAAID,UAAJ,EAAgB;AACZ,UAAME,KAAK,GAAG,EAAd;AACAD,IAAAA,QAAQ,CAACN,cAAc,CAACG,QAAD,EAAWC,QAAX,CAAf,CAAR;AACH;AACJ,CALM;AAOP,OAAO,MAAMI,mBAAmB,GAAG,CAACD,KAAD,EAAQJ,QAAR,EAAkBC,QAAlB,KAA+BE,QAAQ,IAAI;AAC1E,MAAIC,KAAK,CAACE,MAAN,IAAgB,CAApB,EAAuB;AACnBF,IAAAA,KAAK,GAAGA,KAAK,CAACG,MAAN,CAAcC,IAAD,IAAU;AAC3B,aAAOA,IAAI,CAACR,QAAL,KAAkBA,QAAzB;AACH,KAFO,CAAR;AAGAG,IAAAA,QAAQ,CAACN,cAAc,CAAC,CAAC,GAAGO,KAAJ,EAAW;AAACJ,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAX,CAAD,CAAf,CAAR;AACH,GALD,MAKO;AACHE,IAAAA,QAAQ,CAACN,cAAc,CAAC,CAAC;AAACG,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAD,CAAD,CAAf,CAAR;AACH;AACJ,CATM;AAWP,OAAO,MAAMQ,mBAAmB,GAAG,MAAMN,QAAQ,IAAI,CAEpD,CAFM;AAIP,OAAO,MAAMO,sBAAsB,GAAG,CAACC,KAAD,EAAQC,EAAR,KAAeT,QAAQ,IAAI;AAC7DA,EAAAA,QAAQ,CAACP,mBAAmB,CAAC;AAACe,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAD,CAApB,CAAR;AACH,CAFM;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,OAAD,IAAaX,QAAQ,IAAI;AAC5DA,EAAAA,QAAQ,CAACL,SAAS,CAACgB,OAAD,CAAV,CAAR;AACH,CAFM","sourcesContent":["import {addRopeBrandToOrder, addRopeToOrder, addShopId} from \"./actions\";\n\nexport const addRopeOrder = (color_id, quantity, ropesOrder) => dispatch => {\n    if (ropesOrder) {\n        const order = {}\n        dispatch(addRopeToOrder(color_id, quantity))\n    }\n}\n\nexport const ropesOrderOperation = (order, color_id, quantity) => dispatch => {\n    if (order.length >= 1) {\n        order = order.filter((item) => {\n            return item.color_id !== color_id\n        });\n        dispatch(addRopeToOrder([...order, {color_id, quantity}]));\n    } else {\n        dispatch(addRopeToOrder([{color_id, quantity}]));\n    }\n}\n\nexport const setAddressOperation = () => dispatch => {\n\n}\n\nexport const setOrderBrandOperation = (brand, id) => dispatch => {\n    dispatch(addRopeBrandToOrder({brand, id}))\n}\n\nexport const setShopAddressOperation = (shop_id) => dispatch => {\n    dispatch(addShopId(shop_id));\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\"; // import {loginUser} from \"../store/User/actions\";\n\nimport { loginUserOperation } from \"../store/User/operations\";\nexport const useAuth = () => {\n  const [email, setEmail] = useState();\n  const [name, setName] = useState();\n  const [surname, setSurname] = useState();\n  const [shopAddress, setShopAddress] = useState();\n  const [token, setToken] = useState();\n  const dispatch = useDispatch();\n  const login = useCallback((email, name, surname, shopAddress, jwtToken) => {\n    setEmail(email);\n    setName(name);\n    setSurname(surname);\n    setShopAddress(shopAddress);\n    setToken(jwtToken);\n    const user = {\n      email,\n      name,\n      surname,\n      shopAddress,\n      jwtToken,\n      isAuth: true\n    };\n    dispatch(loginUserOperation(email, name, surname, shopAddress, jwtToken)); // dispatch(loginUser(user))\n\n    localStorage.setItem('userData', JSON.stringify(user));\n  }, []);\n  useEffect(() => {\n    const userData = JSON.parse(localStorage.getItem('userData'));\n\n    if (userData && userData.token) {\n      login(...userData);\n    }\n  }, [login]);\n  return {\n    login\n  };\n};","map":{"version":3,"sources":["/Users/etimur/Desktop/vdsh/client/src/Hooks/auth.hook.js"],"names":["useCallback","useEffect","useState","useDispatch","loginUserOperation","useAuth","email","setEmail","name","setName","surname","setSurname","shopAddress","setShopAddress","token","setToken","dispatch","login","jwtToken","user","isAuth","localStorage","setItem","JSON","stringify","userData","parse","getItem"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,SAArB,EAAgCC,QAAhC,QAA+C,OAA/C;AACA,SAAQC,WAAR,QAA0B,aAA1B,C,CACA;;AACA,SAAQC,kBAAR,QAAiC,0BAAjC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,EAAlC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,EAAhC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,EAAtC;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,EAA9C;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,EAAlC;AACA,QAAMc,QAAQ,GAAGb,WAAW,EAA5B;AAEA,QAAMc,KAAK,GAAGjB,WAAW,CAAC,CAACM,KAAD,EAAQE,IAAR,EAAcE,OAAd,EAAuBE,WAAvB,EAAoCM,QAApC,KAAiD;AACvEX,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,UAAU,CAACD,OAAD,CAAV;AACAG,IAAAA,cAAc,CAACD,WAAD,CAAd;AACAG,IAAAA,QAAQ,CAACG,QAAD,CAAR;AAEA,UAAMC,IAAI,GAAG;AAACb,MAAAA,KAAD;AAAQE,MAAAA,IAAR;AAAcE,MAAAA,OAAd;AAAuBE,MAAAA,WAAvB;AAAoCM,MAAAA,QAApC;AAA8CE,MAAAA,MAAM,EAAC;AAArD,KAAb;AACAJ,IAAAA,QAAQ,CAACZ,kBAAkB,CAACE,KAAD,EAAQE,IAAR,EAAcE,OAAd,EAAuBE,WAAvB,EAAoCM,QAApC,CAAnB,CAAR,CARuE,CASvE;;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAjC;AACH,GAXwB,EAWtB,EAXsB,CAAzB;AAaAlB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMwB,QAAQ,GAAGF,IAAI,CAACG,KAAL,CAAWL,YAAY,CAACM,OAAb,CAAqB,UAArB,CAAX,CAAjB;;AAEA,QAAIF,QAAQ,IAAIA,QAAQ,CAACX,KAAzB,EAAgC;AAC5BG,MAAAA,KAAK,CAAC,GAAGQ,QAAJ,CAAL;AACH;AACJ,GANQ,EAMN,CAACR,KAAD,CANM,CAAT;AAQA,SAAO;AAACA,IAAAA;AAAD,GAAP;AACH,CA9BM","sourcesContent":["import {useCallback, useEffect, useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\n// import {loginUser} from \"../store/User/actions\";\nimport {loginUserOperation} from \"../store/User/operations\";\n\nexport const useAuth = () => {\n    const [email, setEmail] = useState();\n    const [name, setName] = useState();\n    const [surname, setSurname] = useState();\n    const [shopAddress, setShopAddress] = useState();\n    const [token, setToken] = useState();\n    const dispatch = useDispatch();\n\n    const login = useCallback((email, name, surname, shopAddress, jwtToken) => {\n        setEmail(email);\n        setName(name);\n        setSurname(surname);\n        setShopAddress(shopAddress);\n        setToken(jwtToken);\n\n        const user = {email, name, surname, shopAddress, jwtToken, isAuth:true}\n        dispatch(loginUserOperation(email, name, surname, shopAddress, jwtToken))\n        // dispatch(loginUser(user))\n        localStorage.setItem('userData', JSON.stringify(user));\n    }, [])\n\n    useEffect(() => {\n        const userData = JSON.parse(localStorage.getItem('userData'));\n\n        if (userData && userData.token) {\n            login(...userData);\n        }\n    }, [login])\n\n    return {login}\n}"]},"metadata":{},"sourceType":"module"}
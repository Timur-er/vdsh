{"ast":null,"code":"import axios from 'axios';\nconst $host = axios.create({\n  withCredentials: true,\n  baseURL: process.env.REACT_APP_API_URL\n});\nconst $authHost = axios.create({\n  withCredentials: true,\n  baseURL: process.env.REACT_APP_API_URL\n}); // нужно допилить этот функционал на бэке\n\nconst authInterceptor = config => {\n  const token = JSON.parse(localStorage.getItem('jwtToken'));\n  console.log(token);\n  config.headers.Authorization = `Bearer ${token}`;\n  return config;\n};\n\n$authHost.interceptors.request.use(authInterceptor);\n$authHost.interceptors.response.use(config => {\n  return config;\n}, error => {\n  if (error.response.status == 401) {// to do\n  }\n});\nexport { $host, $authHost };","map":{"version":3,"sources":["/Users/etimur/Desktop/vdsh/client/src/http/index.js"],"names":["axios","$host","create","withCredentials","baseURL","process","env","REACT_APP_API_URL","$authHost","authInterceptor","config","token","JSON","parse","localStorage","getItem","console","log","headers","Authorization","interceptors","request","use","response","error","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAa;AACvBC,EAAAA,eAAe,EAAE,IADM;AAEvBC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAFE,CAAb,CAAd;AAKA,MAAMC,SAAS,GAAGR,KAAK,CAACE,MAAN,CAAa;AAC3BC,EAAAA,eAAe,EAAE,IADU;AAE3BC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAFM,CAAb,CAAlB,C,CAMA;;AACA,MAAME,eAAe,GAAGC,MAAM,IAAI;AAC9B,QAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAd;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACAD,EAAAA,MAAM,CAACQ,OAAP,CAAeC,aAAf,GAAgC,UAASR,KAAM,EAA/C;AACA,SAAOD,MAAP;AACH,CALD;;AAOAF,SAAS,CAACY,YAAV,CAAuBC,OAAvB,CAA+BC,GAA/B,CAAmCb,eAAnC;AACAD,SAAS,CAACY,YAAV,CAAuBG,QAAvB,CAAgCD,GAAhC,CAAqCZ,MAAD,IAAY;AAC5C,SAAOA,MAAP;AACH,CAFD,EAEIc,KAAK,IAAI;AACT,MAAIA,KAAK,CAACD,QAAN,CAAeE,MAAf,IAAyB,GAA7B,EAAkC,CAC9B;AACH;AACJ,CAND;AAQA,SACIxB,KADJ,EAEIO,SAFJ","sourcesContent":["import axios from 'axios';\n\nconst $host = axios.create({\n    withCredentials: true,\n    baseURL: process.env.REACT_APP_API_URL\n})\n\nconst $authHost = axios.create({\n    withCredentials: true,\n    baseURL: process.env.REACT_APP_API_URL\n})\n\n\n// нужно допилить этот функционал на бэке\nconst authInterceptor = config => {\n    const token = JSON.parse(localStorage.getItem('jwtToken'));\n    console.log(token);\n    config.headers.Authorization = `Bearer ${token}`;\n    return config;\n}\n\n$authHost.interceptors.request.use(authInterceptor);\n$authHost.interceptors.response.use((config) => {\n    return config;\n}, (error => {\n    if (error.response.status == 401) {\n        // to do\n    }\n}))\n\nexport {\n    $host,\n    $authHost\n}"]},"metadata":{},"sourceType":"module"}
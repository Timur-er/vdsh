{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { useRoutes } from 'react-router-dom';\nimport { userRoutes } from \"./routes\";\nimport { addRoutesOperation } from \"../store/Routes/operations\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUserRole } from \"../store/User/selectors\";\n\nconst UserRoutes = () => {\n  const dispatch = useDispatch();\n  const role = useSelector(getUserRole);\n  const isRoleAvailable = role === 'USER' || role === 'MANAGER' || role === 'ADMIN';\n  const routes = userRoutes.map(route => {\n    return {\n      path: route.path,\n      element: route.element\n    };\n  });\n  useEffect(() => {\n    if (isRoleAvailable) {\n      dispatch(addRoutesOperation(userRoutes));\n    }\n  }, [role]);\n  const renderRoutes = useRoutes([...routes]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isRoleAvailable && renderRoutes);\n};\n\nexport default UserRoutes;","map":{"version":3,"sources":["/Users/etimur/Desktop/vdsh/client/src/routes/UserRoutes.js"],"names":["React","useEffect","useRoutes","userRoutes","addRoutesOperation","useDispatch","useSelector","getUserRole","UserRoutes","dispatch","role","isRoleAvailable","routes","map","route","path","element","renderRoutes"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,UAAR,QAAyB,UAAzB;AACA,SAAQC,kBAAR,QAAiC,4BAAjC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,WAAR,QAA0B,yBAA1B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,IAAI,GAAGJ,WAAW,CAACC,WAAD,CAAxB;AACA,QAAMI,eAAe,GAAGD,IAAI,KAAK,MAAT,IAAmBA,IAAI,KAAK,SAA5B,IAAyCA,IAAI,KAAK,OAA1E;AACA,QAAME,MAAM,GAAGT,UAAU,CAACU,GAAX,CAAeC,KAAK,IAAI;AACnC,WAAO;AAACC,MAAAA,IAAI,EAAED,KAAK,CAACC,IAAb;AAAmBC,MAAAA,OAAO,EAAEF,KAAK,CAACE;AAAlC,KAAP;AACH,GAFc,CAAf;AAIAf,EAAAA,SAAS,CAAE,MAAM;AACb,QAAIU,eAAJ,EAAqB;AACjBF,MAAAA,QAAQ,CAACL,kBAAkB,CAACD,UAAD,CAAnB,CAAR;AACH;AACJ,GAJQ,EAIN,CAACO,IAAD,CAJM,CAAT;AAMA,QAAMO,YAAY,GAAGf,SAAS,CAAC,CAAC,GAAGU,MAAJ,CAAD,CAA9B;AAEA,sBACI,0CACKD,eAAe,IAAIM,YADxB,CADJ;AAKH,CArBD;;AAuBA,eAAeT,UAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport {useRoutes} from 'react-router-dom';\nimport {userRoutes} from \"./routes\";\nimport {addRoutesOperation} from \"../store/Routes/operations\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getUserRole} from \"../store/User/selectors\";\n\nconst UserRoutes = () => {\n    const dispatch = useDispatch();\n    const role = useSelector(getUserRole);\n    const isRoleAvailable = role === 'USER' || role === 'MANAGER' || role === 'ADMIN';\n    const routes = userRoutes.map(route => {\n        return {path: route.path, element: route.element}\n    })\n\n    useEffect( () => {\n        if (isRoleAvailable) {\n            dispatch(addRoutesOperation(userRoutes));\n        }\n    }, [role]);\n\n    const renderRoutes = useRoutes([...routes])\n\n    return (\n        <>\n            {isRoleAvailable && renderRoutes}\n        </>\n    );\n};\n\nexport default UserRoutes;"]},"metadata":{},"sourceType":"module"}
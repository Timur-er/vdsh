{"ast":null,"code":"var _jsxFileName = \"/Users/etimur/Desktop/vdsh/client/src/Components/RegAuth/RegistarationForm/RegistrationForm.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from 'yup';\nimport styles from './RegistrationForm.module.scss';\nimport { registrationAPI } from \"../../../http/userAPI\";\nimport { USER_PAGE } from \"../../../routes/const\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../../../Hooks/auth.hook\";\nimport { getAllShops } from \"../../../http/shopAPI\";\n\nconst RegistrationForm = () => {\n  const {\n    login\n  } = useAuth();\n  const navigate = useNavigate();\n  const [shops, setShops] = useState(null);\n  useEffect(async () => {\n    const fetchedShops = await getAllShops();\n    setShops(fetchedShops.data);\n  }, []);\n  const renderShops = shops !== null && shops.map(shop => {\n    const {\n      id,\n      address\n    } = shop;\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, address);\n  });\n  const validationSchema = Yup.object({\n    email: Yup.string().email('Не правильный email').required('Укажите email!'),\n    name: Yup.string().min(2, 'Минимальное количество символов 2').max(15, 'Максимальное количество символов 15').required('Это обязательное поле!'),\n    surname: Yup.string().min(2, 'Минимальное количество символов 2').max(15, 'Максимальное количество символов 15').required('Это обязательное поле!'),\n    password: Yup.string().min(6, 'Минимальное кол-во символов 6').required('Это обязательное поле!'),\n    confirmPassword: Yup.string().required('Повторите пароль').oneOf([Yup.ref('password'), null], 'Пароли не совпадают')\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      name: '',\n      surname: '',\n      password: '',\n      confirmPassword: '',\n      shopAddress: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: async (values, _ref) => {\n      let {\n        setSubmitting\n      } = _ref;\n      const {\n        email,\n        name,\n        surname,\n        shopAddress,\n        password\n      } = values;\n      const newUser = await registrationAPI(email, name, surname, shopAddress, password);\n      const {\n        user_id,\n        email: userEmail,\n        name: userName,\n        surname: userSurname,\n        role,\n        shop_id,\n        isActivated\n      } = newUser.data.user;\n      login(user_id, userEmail, userName, userSurname, shop_id, newUser.data.accessToken, role, isActivated); // navigate(USER_PAGE)\n\n      setSubmitting(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, formik => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.formWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: styles.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 37\n      }\n    }, \"Email:\", /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: 'email',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Field, {\n      className: styles.input,\n      type: \"email\",\n      name: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 37\n      }\n    }, \"\\u0418\\u043C\\u044F\", /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: 'name',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Field, {\n      className: styles.input,\n      type: \"text\",\n      name: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 37\n      }\n    }, \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\", /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: 'surname',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Field, {\n      className: styles.input,\n      type: \"text\",\n      name: \"surname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 37\n      }\n    }, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\", /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: 'password',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Field, {\n      className: styles.input,\n      type: \"password\",\n      name: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 37\n      }\n    }, \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\", /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: 'confirmPassword',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Field, {\n      className: styles.input,\n      type: \"password\",\n      name: \"confirmPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.selectBlock,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: styles.select,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 41\n      }\n    }, \"\\u0410\\u0434\\u0440\\u0435\\u0441 \\u043C\\u0430\\u0433\\u0430\\u0437\\u0438\\u043D\\u0430 \\u0432 \\u043A\\u043E\\u0442\\u043E\\u0440\\u043E\\u043C \\u0432\\u044B \\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u0435\\u0442\\u0435:\", /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: 'shopAddress',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Field, {\n      as: \"select\",\n      name: \"shopAddress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 45\n      }\n    }), renderShops))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: styles.submitButton,\n      type: 'submit',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 37\n      }\n    }, \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"))));\n  }));\n};\n\nexport default RegistrationForm;","map":{"version":3,"sources":["/Users/etimur/Desktop/vdsh/client/src/Components/RegAuth/RegistarationForm/RegistrationForm.js"],"names":["React","useEffect","useState","Formik","Form","Field","ErrorMessage","Yup","styles","registrationAPI","USER_PAGE","useNavigate","useAuth","getAllShops","RegistrationForm","login","navigate","shops","setShops","fetchedShops","data","renderShops","map","shop","id","address","validationSchema","object","email","string","required","name","min","max","surname","password","confirmPassword","oneOf","ref","shopAddress","values","setSubmitting","newUser","user_id","userEmail","userName","userSurname","role","shop_id","isActivated","user","accessToken","formik","formWrapper","form","errorMessage","input","selectBlock","select","submitButton"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,KAAtB,EAA6BC,YAA7B,QAAgD,QAAhD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAAQC,eAAR,QAA8B,uBAA9B;AACA,SAAQC,SAAR,QAAwB,uBAAxB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,SAAQC,OAAR,QAAsB,0BAAtB;AACA,SAAQC,WAAR,QAA0B,uBAA1B;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC3B,QAAM;AAACC,IAAAA;AAAD,MAAUH,OAAO,EAAvB;AACA,QAAMI,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,YAAY;AAClB,UAAMkB,YAAY,GAAG,MAAMN,WAAW,EAAtC;AACAK,IAAAA,QAAQ,CAACC,YAAY,CAACC,IAAd,CAAR;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,QAAMC,WAAW,GAAGJ,KAAK,KAAK,IAAV,IAAkBA,KAAK,CAACK,GAAN,CAAUC,IAAI,IAAI;AACpD,UAAM;AAACC,MAAAA,EAAD;AAAKC,MAAAA;AAAL,QAAgBF,IAAtB;AACA,wBACI;AAAQ,MAAA,KAAK,EAAEE,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBA,OAAzB,CADJ;AAGH,GALqC,CAAtC;AAOA,QAAMC,gBAAgB,GAAGnB,GAAG,CAACoB,MAAJ,CAAW;AAChCC,IAAAA,KAAK,EAAErB,GAAG,CAACsB,MAAJ,GAAaD,KAAb,CAAmB,qBAAnB,EAA0CE,QAA1C,CAAmD,gBAAnD,CADyB;AAEhCC,IAAAA,IAAI,EAAExB,GAAG,CAACsB,MAAJ,GACDG,GADC,CACG,CADH,EACM,mCADN,EAEDC,GAFC,CAEG,EAFH,EAEO,qCAFP,EAGDH,QAHC,CAGQ,wBAHR,CAF0B;AAMhCI,IAAAA,OAAO,EAAE3B,GAAG,CAACsB,MAAJ,GACJG,GADI,CACA,CADA,EACG,mCADH,EAEJC,GAFI,CAEA,EAFA,EAEI,qCAFJ,EAGJH,QAHI,CAGK,wBAHL,CANuB;AAUhCK,IAAAA,QAAQ,EAAE5B,GAAG,CAACsB,MAAJ,GACLG,GADK,CACD,CADC,EACE,+BADF,EAELF,QAFK,CAEI,wBAFJ,CAVsB;AAahCM,IAAAA,eAAe,EAAE7B,GAAG,CAACsB,MAAJ,GACZC,QADY,CACH,kBADG,EAEZO,KAFY,CAEN,CAAC9B,GAAG,CAAC+B,GAAJ,CAAQ,UAAR,CAAD,EAAsB,IAAtB,CAFM,EAEuB,qBAFvB;AAbe,GAAX,CAAzB;AAmBA,sBACI,uDACI,oBAAC,MAAD;AACI,IAAA,aAAa,EAAE;AACXV,MAAAA,KAAK,EAAE,EADI;AAEXG,MAAAA,IAAI,EAAE,EAFK;AAGXG,MAAAA,OAAO,EAAE,EAHE;AAIXC,MAAAA,QAAQ,EAAE,EAJC;AAKXC,MAAAA,eAAe,EAAE,EALN;AAMXG,MAAAA,WAAW,EAAE;AANF,KADnB;AASI,IAAA,gBAAgB,EAAEb,gBATtB;AAUI,IAAA,QAAQ,EAAE,OAAOc,MAAP,WAAmC;AAAA,UAApB;AAACC,QAAAA;AAAD,OAAoB;AACzC,YAAM;AAACb,QAAAA,KAAD;AAAQG,QAAAA,IAAR;AAAcG,QAAAA,OAAd;AAAuBK,QAAAA,WAAvB;AAAoCJ,QAAAA;AAApC,UAAgDK,MAAtD;AACA,YAAME,OAAO,GAAG,MAAMjC,eAAe,CAACmB,KAAD,EAAQG,IAAR,EAAcG,OAAd,EAAuBK,WAAvB,EAAoCJ,QAApC,CAArC;AACA,YAAM;AAACQ,QAAAA,OAAD;AAAUf,QAAAA,KAAK,EAAEgB,SAAjB;AAA4Bb,QAAAA,IAAI,EAAEc,QAAlC;AAA4CX,QAAAA,OAAO,EAAEY,WAArD;AAAkEC,QAAAA,IAAlE;AAAwEC,QAAAA,OAAxE;AAAiFC,QAAAA;AAAjF,UAAgGP,OAAO,CAACtB,IAAR,CAAa8B,IAAnH;AACAnC,MAAAA,KAAK,CAAC4B,OAAD,EAAUC,SAAV,EAAqBC,QAArB,EAA+BC,WAA/B,EAA4CE,OAA5C,EAAqDN,OAAO,CAACtB,IAAR,CAAa+B,WAAlE,EAA+EJ,IAA/E,EAAqFE,WAArF,CAAL,CAJyC,CAKzC;;AACAR,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAjBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAkBMW,MAAD,IAAY;AACT,wBACI;AAAK,MAAA,SAAS,EAAE5C,MAAM,CAAC6C,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAE7C,MAAM,CAAC8C,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEI;AAAM,MAAA,SAAS,EAAE9C,MAAM,CAAC+C,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,CADJ,eAOI,oBAAC,KAAD;AACI,MAAA,SAAS,EAAE/C,MAAM,CAACgD,KADtB;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,IAAI,EAAC,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADJ,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEI;AAAM,MAAA,SAAS,EAAEhD,MAAM,CAAC+C,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAE,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,CADJ,eAOI,oBAAC,KAAD;AACI,MAAA,SAAS,EAAE/C,MAAM,CAACgD,KADtB;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,IAAI,EAAC,MAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CAdJ,eA2BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAEI;AAAM,MAAA,SAAS,EAAEhD,MAAM,CAAC+C,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,CADJ,eAOI,oBAAC,KAAD;AACI,MAAA,SAAS,EAAE/C,MAAM,CAACgD,KADtB;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,IAAI,EAAC,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CA3BJ,eAwCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAEI;AAAM,MAAA,SAAS,EAAEhD,MAAM,CAAC+C,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAE,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,CADJ,eAOI,oBAAC,KAAD;AACI,MAAA,SAAS,EAAE/C,MAAM,CAACgD,KADtB;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,IAAI,EAAC,UAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CAxCJ,eAqDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+HAEI;AAAM,MAAA,SAAS,EAAEhD,MAAM,CAAC+C,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAE,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,CADJ,eAOI,oBAAC,KAAD;AACI,MAAA,SAAS,EAAE/C,MAAM,CAACgD,KADtB;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,IAAI,EAAC,iBAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CArDJ,eAkEI;AAAK,MAAA,SAAS,EAAEhD,MAAM,CAACiD,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAO,MAAA,SAAS,EAAEjD,MAAM,CAACkD,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8NAEI;AAAM,MAAA,SAAS,EAAElD,MAAM,CAAC+C,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAE,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAFJ,CADJ,eAOI,oBAAC,KAAD;AACI,MAAA,EAAE,EAAC,QADP;AAEI,MAAA,IAAI,EAAC,aAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAIKlC,WAJL,CAPJ,CAFJ,CAlEJ,eAoFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,SAAS,EAAEb,MAAM,CAACmD,YAA1B;AAAwC,MAAA,IAAI,EAAE,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sHADJ,CApFJ,CADJ,CADJ;AA4FH,GA/GL,CADJ,CADJ;AAqHH,CAzJD;;AA2JA,eAAe7C,gBAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Formik, Form, Field, ErrorMessage} from \"formik\";\nimport * as Yup from 'yup';\nimport styles from './RegistrationForm.module.scss';\nimport {registrationAPI} from \"../../../http/userAPI\";\nimport {USER_PAGE} from \"../../../routes/const\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useAuth} from \"../../../Hooks/auth.hook\";\nimport {getAllShops} from \"../../../http/shopAPI\";\n\nconst RegistrationForm = () => {\n    const {login} = useAuth();\n    const navigate = useNavigate();\n    const [shops, setShops] = useState(null);\n\n    useEffect(async () => {\n        const fetchedShops = await getAllShops();\n        setShops(fetchedShops.data)\n    }, [])\n\n    const renderShops = shops !== null && shops.map(shop => {\n        const {id, address} = shop;\n        return (\n            <option value={address}>{address}</option>\n        )\n    })\n\n    const validationSchema = Yup.object({\n        email: Yup.string().email('Не правильный email').required('Укажите email!'),\n        name: Yup.string()\n            .min(2, 'Минимальное количество символов 2')\n            .max(15, 'Максимальное количество символов 15')\n            .required('Это обязательное поле!'),\n        surname: Yup.string()\n            .min(2, 'Минимальное количество символов 2')\n            .max(15, 'Максимальное количество символов 15')\n            .required('Это обязательное поле!'),\n        password: Yup.string()\n            .min(6, 'Минимальное кол-во символов 6')\n            .required('Это обязательное поле!'),\n        confirmPassword: Yup.string()\n            .required('Повторите пароль')\n            .oneOf([Yup.ref('password'), null], 'Пароли не совпадают'),\n\n    })\n\n    return (\n        <>\n            <Formik\n                initialValues={{\n                    email: '',\n                    name: '',\n                    surname: '',\n                    password: '',\n                    confirmPassword: '',\n                    shopAddress: ''\n                }}\n                validationSchema={validationSchema}\n                onSubmit={async (values, {setSubmitting}) => {\n                    const {email, name, surname, shopAddress, password} = values;\n                    const newUser = await registrationAPI(email, name, surname, shopAddress, password);\n                    const {user_id, email: userEmail, name: userName, surname: userSurname, role, shop_id, isActivated} = newUser.data.user;\n                    login(user_id, userEmail, userName, userSurname, shop_id, newUser.data.accessToken, role, isActivated);\n                    // navigate(USER_PAGE)\n                    setSubmitting(false);\n                }}>\n                {(formik) => {\n                    return (\n                        <div className={styles.formWrapper}>\n                            <Form className={styles.form}>\n                                <label>\n                                    <div>\n                                        Email:\n                                        <span className={styles.errorMessage}>\n                                            <ErrorMessage name={'email'}/>\n                                        </span>\n                                    </div>\n                                    <Field\n                                        className={styles.input}\n                                        type='email'\n                                        name='email'/>\n                                </label>\n\n                                <label>\n                                    <div>\n                                        Имя\n                                        <span className={styles.errorMessage}>\n                                            <ErrorMessage name={'name'}/>\n                                        </span>\n                                    </div>\n                                    <Field\n                                        className={styles.input}\n                                        type='text'\n                                        name='name'/>\n                                </label>\n\n                                <label>\n                                    <div>\n                                        Фамилия\n                                        <span className={styles.errorMessage}>\n                                            <ErrorMessage name={'surname'}/>\n                                        </span>\n                                    </div>\n                                    <Field\n                                        className={styles.input}\n                                        type='text'\n                                        name='surname'/>\n                                </label>\n\n                                <label>\n                                    <div>\n                                        Пароль\n                                        <span className={styles.errorMessage}>\n                                            <ErrorMessage name={'password'}/>\n                                        </span>\n                                    </div>\n                                    <Field\n                                        className={styles.input}\n                                        type='password'\n                                        name='password'/>\n                                </label>\n\n                                <label>\n                                    <div>\n                                        Подтвердите пароль\n                                        <span className={styles.errorMessage}>\n                                            <ErrorMessage name={'confirmPassword'}/>\n                                        </span>\n                                    </div>\n                                    <Field\n                                        className={styles.input}\n                                        type='password'\n                                        name='confirmPassword'/>\n                                </label>\n\n                                <div className={styles.selectBlock}>\n\n                                    <label className={styles.select}>\n                                        <div>\n                                            Адрес магазина в котором вы работаете:\n                                            <span className={styles.errorMessage}>\n                                            <ErrorMessage name={'shopAddress'}/>\n                                        </span>\n                                        </div>\n                                        <Field\n                                            as='select'\n                                            name='shopAddress'>\n                                            <option>{}</option>\n                                            {renderShops}\n                                        </Field>\n                                    </label>\n                                </div>\n\n                                <div>\n                                    <button className={styles.submitButton} type={'submit'}>Зарегистрироваться</button>\n                                </div>\n                            </Form>\n                        </div>\n                    )\n                }}\n            </Formik>\n        </>\n    );\n};\n\nexport default RegistrationForm;"]},"metadata":{},"sourceType":"module"}
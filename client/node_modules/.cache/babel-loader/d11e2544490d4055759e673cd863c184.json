{"ast":null,"code":"var _jsxFileName = \"/Users/etimur/Desktop/vdsh/client/src/Components/OrderField/OrderField.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport styles from './OrderField.module.scss';\nimport { Form, Formik, Field, ErrorMessage, useFormik, FieldArray, getIn } from \"formik\";\nimport * as Yup from 'yup';\nimport { useHttp } from \"../../Hooks/http.hook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OrderField = () => {\n  _s();\n\n  const {\n    loading,\n    error,\n    request\n  } = useHttp();\n  const validationSchema = Yup.object().shape({\n    // address: Yup\n    //     .string()\n    //     .required('укажите адресс'),\n    brand: Yup.string().required('Укажите марку'),\n    order: Yup.array(Yup.object({\n      quantity: Yup.string().min(1, 'введите кол-во').required('это обязатенльое поле'),\n      color: Yup.string().min(4, '4').max(4, '4').required('Это обязательное поле')\n    }).required())\n  });\n  const initialValues = {\n    // address: 'chreshatyk',\n    brand: 'DMC',\n    order: [{\n      quantity: '',\n      color: ''\n    }]\n  };\n\n  const confirmBtn = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      validateOnChange: true,\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: async (values, _ref) => {\n        let {\n          setSubmitting\n        } = _ref;\n        const {\n          brand,\n          order\n        } = values;\n        const createBrand = await request('http://localhost:5000/api/ropes/addRopeBrand', 'POST', {\n          brand\n        });\n        const addRopesItems = await request('http://localhost:5000/api/ropes/addRopeItem', 'POST', {\n          order,\n          brandId: createBrand\n        });\n        console.log(createBrand);\n        console.log(values);\n        setSubmitting(false);\n      },\n      children: _ref2 => {\n        let {\n          values,\n          handleSubmit,\n          errors,\n          touched,\n          setTouched\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.orderSameData,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\u041F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0438\\u0442\\u0435\\u043B\\u044C:\", /*#__PURE__*/_jsxDEV(Field, {\n                as: \"select\",\n                name: \"brand\",\n                id: \"brand\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"dmc\",\n                  children: \"DMC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"ideal\",\n                  children: \"IDEAL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"kirovo\",\n                  children: \"KIROVO\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FieldArray, {\n            name: 'order',\n            children: _ref3 => {\n              let {\n                push,\n                remove\n              } = _ref3;\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.formWrapper,\n                  children: values.order.map((x, index) => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: styles.form,\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: styles.inputsWrapper,\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: styles.inputLabel,\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            children: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 96,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: styles.inputContainer,\n                            children: /*#__PURE__*/_jsxDEV(Field, {\n                              className: styles.quantityInput,\n                              name: `order.${index}.quantity`\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 98,\n                              columnNumber: 69\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 97,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: styles.errorMsg,\n                            children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                              name: `order.${index}.quantity`\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 100,\n                              columnNumber: 99\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 100,\n                            columnNumber: 65\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 95,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: styles.inputLabel,\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            children: \"\\u0426\\u0432\\u0435\\u0442 \\u2116:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 103,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: styles.inputContainer,\n                            children: /*#__PURE__*/_jsxDEV(Field, {\n                              name: `order.${index}.color`\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 105,\n                              columnNumber: 69\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 104,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: styles.errorMsg,\n                            children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                              name: `order.${index}.color`\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 107,\n                              columnNumber: 99\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 107,\n                            columnNumber: 65\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 102,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 94,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => remove(index),\n                        children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 110,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 53\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.orderButtons,\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: 'submit',\n                    className: styles.orderBtn,\n                    children: \"\\u041E\\u0444\\u043E\\u0440\\u043C\\u0438\\u0442\\u044C \\u0437\\u0430\\u043A\\u0430\\u0437\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      push({\n                        quantity: '',\n                        color: ''\n                      });\n                    },\n                    className: styles.orderBtn,\n                    children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0446\\u0432\\u0435\\u0442\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(OrderField, \"pRTNMMhsHCQjAa50wT+7TkbMt48=\", false, function () {\n  return [useHttp];\n});\n\n_c = OrderField;\nexport default OrderField;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderField\");","map":{"version":3,"sources":["/Users/etimur/Desktop/vdsh/client/src/Components/OrderField/OrderField.js"],"names":["React","useRef","useState","styles","Form","Formik","Field","ErrorMessage","useFormik","FieldArray","getIn","Yup","useHttp","OrderField","loading","error","request","validationSchema","object","shape","brand","string","required","order","array","quantity","min","color","max","initialValues","confirmBtn","values","setSubmitting","createBrand","addRopesItems","brandId","console","log","handleSubmit","errors","touched","setTouched","orderSameData","push","remove","formWrapper","map","x","index","form","inputsWrapper","inputLabel","inputContainer","quantityInput","errorMsg","orderButtons","orderBtn"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\nimport styles from './OrderField.module.scss';\nimport {Form, Formik, Field, ErrorMessage, useFormik, FieldArray, getIn} from \"formik\";\nimport * as Yup from 'yup';\nimport {useHttp} from \"../../Hooks/http.hook\";\n\nconst OrderField = () => {\n   const {loading, error, request} = useHttp();\n\n\n    const validationSchema = Yup.object().shape({\n        // address: Yup\n        //     .string()\n        //     .required('укажите адресс'),\n        brand: Yup\n            .string()\n            .required('Укажите марку'),\n        order: Yup.array(\n            Yup.object({\n                quantity: Yup\n                    .string()\n                    .min(1, 'введите кол-во')\n                    .required('это обязатенльое поле'),\n                color: Yup\n                    .string()\n                    .min(4, '4')\n                    .max(4, '4')\n                    .required('Это обязательное поле')\n            }).required()\n        )\n    })\n\n    const initialValues = {\n        // address: 'chreshatyk',\n        brand: 'DMC',\n        order: [\n            {\n                quantity: '',\n                color: ''\n            }\n        ]\n    }\n\n    const confirmBtn = () => {\n\n    }\n\n    return (\n        <>\n            <Formik\n                validateOnChange={true}\n                initialValues={initialValues}\n                validationSchema={validationSchema}\n                onSubmit={async (values, {setSubmitting}) => {\n                    const {brand, order} = values;\n                    const createBrand = await request('http://localhost:5000/api/ropes/addRopeBrand', 'POST', {brand});\n                    const addRopesItems = await request('http://localhost:5000/api/ropes/addRopeItem', 'POST', {order, brandId: createBrand})\n                    console.log(createBrand);\n                    console.log(values);\n                    setSubmitting(false);\n                }}\n            >\n                {({values, handleSubmit, errors, touched, setTouched}) => (\n                    <Form onSubmit={handleSubmit}>\n                        <div className={styles.orderSameData}>\n                            {/*<div>*/}\n                            {/*    Магазин:*/}\n                            {/*    <Field as='select' name=\"address\" id=\"address\">*/}\n                            {/*        <option value=\"creshatyk\">Крешатик</option>*/}\n                            {/*        <option value=\"darnitsa\">Дарница</option>*/}\n                            {/*        <option value=\"teremki\">Теремки</option>*/}\n                            {/*    </Field>*/}\n                            {/*</div>*/}\n\n                            <div>\n                                Производитель:\n                                <Field as='select' name=\"brand\" id=\"brand\">\n                                    <option value=\"dmc\">DMC</option>\n                                    <option value=\"ideal\">IDEAL</option>\n                                    <option value=\"kirovo\">KIROVO</option>\n                                </Field>\n                            </div>\n                        </div>\n\n                        <FieldArray name={'order'}>\n                            {({push, remove}) => (\n\n                                <>\n                                    <div className={styles.formWrapper}>\n                                        {\n                                            values.order.map((x, index) => {\n                                                return (\n                                                    <div className={styles.form}>\n                                                        <div className={styles.inputsWrapper}>\n                                                            <div className={styles.inputLabel}>\n                                                                <label>Количество:</label>\n                                                                <div className={styles.inputContainer}>\n                                                                    <Field className={styles.quantityInput} name={`order.${index}.quantity`}/>\n                                                                </div>\n                                                                <span className={styles.errorMsg}><ErrorMessage name={`order.${index}.quantity`}/></span>\n                                                            </div>\n                                                            <div className={styles.inputLabel}>\n                                                                <label>Цвет №:</label>\n                                                                <div className={styles.inputContainer}>\n                                                                    <Field name={`order.${index}.color`}/>\n                                                                </div>\n                                                                <span className={styles.errorMsg}><ErrorMessage name={`order.${index}.color`}/></span>\n                                                            </div>\n                                                        </div>\n                                                        <button onClick={() => remove(index)}>Удалить</button>\n                                                    </div>\n                                                )\n                                            })\n                                        }\n                                    </div>\n\n                                    <div className={styles.orderButtons}>\n                                        <button type={'submit'} className={styles.orderBtn}>Оформить заказ</button>\n                                        <button onClick={() => {\n                                            push({quantity: '', color: ''})\n                                        }} className={styles.orderBtn}>\n                                            Добавить цвет\n                                        </button>\n                                    </div>\n                                </>\n                            )}\n                        </FieldArray>\n                    </Form>\n                )}\n            </Formik>\n        </>\n    );\n};\n\nexport default OrderField;"]},"metadata":{},"sourceType":"module"}
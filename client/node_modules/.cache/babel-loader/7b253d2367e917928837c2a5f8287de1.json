{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { useRoutes } from 'react-router-dom';\nimport { adminRoutes, managerRoutes } from \"./routes\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addRoutesOperation } from \"../store/Routes/operations\";\nimport { getUserRole } from \"../store/User/selectors\";\n\nconst AdminRoutes = () => {\n  const dispatch = useDispatch();\n  const role = useSelector(getUserRole);\n  const isRoleAvailable = role === 'ADMIN';\n  const routes = adminRoutes.map(route => {\n    return {\n      path: route.path,\n      element: route.element\n    };\n  });\n  useEffect(() => {\n    if (isRoleAvailable) {\n      dispatch(addRoutesOperation(adminRoutes));\n    }\n  }, []);\n  const renderRoutes = useRoutes([...routes]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isRoleAvailable && renderRoutes);\n};\n\nexport default AdminRoutes;","map":{"version":3,"sources":["/Users/etimur/Desktop/vdsh/client/src/routes/AdminRoutes.js"],"names":["React","useEffect","useRoutes","adminRoutes","managerRoutes","useDispatch","useSelector","addRoutesOperation","getUserRole","AdminRoutes","dispatch","role","isRoleAvailable","routes","map","route","path","element","renderRoutes"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,WAAR,EAAqBC,aAArB,QAAyC,UAAzC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,kBAAR,QAAiC,4BAAjC;AACA,SAAQC,WAAR,QAA0B,yBAA1B;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACtB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,IAAI,GAAGL,WAAW,CAACE,WAAD,CAAxB;AACA,QAAMI,eAAe,GAAGD,IAAI,KAAK,OAAjC;AAEA,QAAME,MAAM,GAAGV,WAAW,CAACW,GAAZ,CAAgBC,KAAK,IAAI;AACpC,WAAO;AAACC,MAAAA,IAAI,EAAED,KAAK,CAACC,IAAb;AAAmBC,MAAAA,OAAO,EAAEF,KAAK,CAACE;AAAlC,KAAP;AACH,GAFc,CAAf;AAIAhB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,eAAJ,EAAqB;AACjBF,MAAAA,QAAQ,CAACH,kBAAkB,CAACJ,WAAD,CAAnB,CAAR;AACH;AACJ,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAMe,YAAY,GAAGhB,SAAS,CAAC,CAAC,GAAGW,MAAJ,CAAD,CAA9B;AAEA,sBACI,0CACKD,eAAe,IAAIM,YADxB,CADJ;AAKH,CAtBD;;AAwBA,eAAeT,WAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport {useRoutes} from 'react-router-dom';\nimport {adminRoutes, managerRoutes} from \"./routes\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addRoutesOperation} from \"../store/Routes/operations\";\nimport {getUserRole} from \"../store/User/selectors\";\n\nconst AdminRoutes = () => {\n    const dispatch = useDispatch();\n    const role = useSelector(getUserRole);\n    const isRoleAvailable = role === 'ADMIN';\n\n    const routes = adminRoutes.map(route => {\n        return {path: route.path, element: route.element}\n    })\n\n    useEffect(() => {\n        if (isRoleAvailable) {\n            dispatch(addRoutesOperation(adminRoutes));\n        }\n    }, []);\n\n    const renderRoutes = useRoutes([...routes])\n\n    return (\n        <>\n            {isRoleAvailable && renderRoutes}\n        </>\n    );\n};\n\nexport default AdminRoutes;"]},"metadata":{},"sourceType":"module"}
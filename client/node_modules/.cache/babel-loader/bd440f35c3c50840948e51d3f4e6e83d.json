{"ast":null,"code":"var _jsxFileName = \"/Users/etimur/Desktop/vdsh/client/src/Components/RegAuth/RegistarationForm/RegistrationForm.js\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from 'yup';\nimport styles from './RegistrationForm.module.scss';\n\nconst RegistrationForm = () => {\n  const validationSchema = Yup.object({\n    email: Yup.string().email('Не правильный email').required('Укажите email!'),\n    userName: Yup.string().min(2, 'Минимальное количество символов 2').max(15, 'Максимальное количество символов 15').required('Это обязательное поле!'),\n    password: Yup.string().min(6, 'Минимальное кол-во символов 6').required('Это обязательное поле!'),\n    confirmPassword: Yup.string().required('Повторите пароль').oneOf([Yup.ref('password'), null], 'Пароли не совпадают')\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      userName: '',\n      password: '',\n      confirmPassword: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values, _ref) => {\n      let {\n        setSubmitting\n      } = _ref;\n      console.log(values);\n      setSubmitting(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, formik => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.formWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: styles.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"email\",\n      name: \"email\",\n      placeholder: 'email',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"userName\",\n      placeholder: 'user name',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      type: \"password\",\n      name: \"password\",\n      placeholder: 'password',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      placeholder: 'confirm password',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 37\n      }\n    })));\n  }));\n};\n\nexport default RegistrationForm;","map":{"version":3,"sources":["/Users/etimur/Desktop/vdsh/client/src/Components/RegAuth/RegistarationForm/RegistrationForm.js"],"names":["React","Formik","Form","Field","ErrorMessage","Yup","styles","RegistrationForm","validationSchema","object","email","string","required","userName","min","max","password","confirmPassword","oneOf","ref","values","setSubmitting","console","log","formik","formWrapper","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAiD,QAAjD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAE3B,QAAMC,gBAAgB,GAAGH,GAAG,CAACI,MAAJ,CAAW;AAChCC,IAAAA,KAAK,EAAEL,GAAG,CAACM,MAAJ,GAAaD,KAAb,CAAmB,qBAAnB,EAA0CE,QAA1C,CAAmD,gBAAnD,CADyB;AAEhCC,IAAAA,QAAQ,EAAER,GAAG,CAACM,MAAJ,GACLG,GADK,CACD,CADC,EACE,mCADF,EAELC,GAFK,CAED,EAFC,EAEG,qCAFH,EAGLH,QAHK,CAGI,wBAHJ,CAFsB;AAMhCI,IAAAA,QAAQ,EAAEX,GAAG,CAACM,MAAJ,GACLG,GADK,CACD,CADC,EACE,+BADF,EAELF,QAFK,CAEI,wBAFJ,CANsB;AAShCK,IAAAA,eAAe,EAAEZ,GAAG,CAACM,MAAJ,GACZC,QADY,CACH,kBADG,EAEZM,KAFY,CAEN,CAACb,GAAG,CAACc,GAAJ,CAAQ,UAAR,CAAD,EAAsB,IAAtB,CAFM,EAEuB,qBAFvB;AATe,GAAX,CAAzB;AAgBA,sBACI,uDACI,oBAAC,MAAD;AACI,IAAA,aAAa,EAAE;AACXT,MAAAA,KAAK,EAAE,EADI;AAEXG,MAAAA,QAAQ,EAAE,EAFC;AAGXG,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,eAAe,EAAE;AAJN,KADnB;AAOI,IAAA,gBAAgB,EAAET,gBAPtB;AAQI,IAAA,QAAQ,EAAE,CAACY,MAAD,WAA6B;AAAA,UAApB;AAACC,QAAAA;AAAD,OAAoB;AACnCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAC,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAXL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYMG,MAAD,IAAY;AACT,wBACI;AAAK,MAAA,SAAS,EAAElB,MAAM,CAACmB,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAEnB,MAAM,CAACoB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ,oBAAC,KAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,WAAW,EAAE,OAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR,eAKQ,oBAAC,KAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,WAAW,EAAE,WAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALR,eAQQ,oBAAC,KAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,WAAW,EAAE,UAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARR,eAYQ,oBAAC,KAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,IAAI,EAAC,iBAFT;AAGI,MAAA,WAAW,EAAE,kBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZR,CADJ,CADJ;AAqBH,GAlCL,CADJ,CADJ;AAwCH,CA1DD;;AA4DA,eAAenB,gBAAf","sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage} from \"formik\";\nimport * as Yup from 'yup';\nimport styles from './RegistrationForm.module.scss';\n\nconst RegistrationForm = () => {\n\n    const validationSchema = Yup.object({\n        email: Yup.string().email('Не правильный email').required('Укажите email!'),\n        userName: Yup.string()\n            .min(2, 'Минимальное количество символов 2')\n            .max(15, 'Максимальное количество символов 15')\n            .required('Это обязательное поле!'),\n        password: Yup.string()\n            .min(6, 'Минимальное кол-во символов 6')\n            .required('Это обязательное поле!'),\n        confirmPassword: Yup.string()\n            .required('Повторите пароль')\n            .oneOf([Yup.ref('password'), null], 'Пароли не совпадают')\n\n    })\n\n\n    return (\n        <>\n            <Formik\n                initialValues={{\n                    email: '',\n                    userName: '',\n                    password: '',\n                    confirmPassword: ''\n                }}\n                validationSchema={validationSchema}\n                onSubmit={(values, {setSubmitting}) => {\n                    console.log(values);\n                    setSubmitting(false)\n                }}>\n                {(formik) => {\n                    return (\n                        <div className={styles.formWrapper}>\n                            <Form className={styles.form}>\n                                    <Field\n                                        type='email'\n                                        name='email'\n                                        placeholder={'email'}/>\n                                    <Field\n                                        name='userName'\n                                        placeholder={'user name'}/>\n                                    <Field\n                                        type='password'\n                                        name='password'\n                                        placeholder={'password'}/>\n                                    <Field\n                                        type='password'\n                                        name='confirmPassword'\n                                        placeholder={'confirm password'}/>\n                            </Form>\n                        </div>\n                    )\n                }}\n            </Formik>\n        </>\n    );\n};\n\nexport default RegistrationForm;"]},"metadata":{},"sourceType":"module"}
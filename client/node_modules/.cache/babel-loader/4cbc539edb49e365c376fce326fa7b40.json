{"ast":null,"code":"import { getRopesOrder } from \"./selectors\";\nimport { addRopeToOrder } from \"./actions\";\nexport const addRopeOrder = (color_id, quantity, ropesOrder) => dispatch => {\n  if (ropesOrder) {\n    const order = {};\n    dispatch(addRopeToOrder(color_id, quantity));\n  }\n};\nexport const ropesOrderOperation = (order, quantityAction, color_id, quantity) => dispatch => {\n  switch (quantityAction) {\n    case 'increment':\n      // order = [...order, {color_id, quantity}];\n      if (order.length > 1) {\n        console.log('else order');\n        order = order.filter(item => {\n          return item.color_id === color_id;\n        });\n        console.log(order);\n        dispatch(addRopeToOrder([...order]));\n      } else {\n        console.log('first order');\n        dispatch(addRopeToOrder([...order]));\n      } // order.forEach(item => {\n      //     if (item.color_id === color_id) {\n      //         console.log('remove');\n      //\n      // dispatch(addRopeToOrder({color_id, quantity}))\n      // }\n      // })\n      // dispatch(addRopeToOrder({color_id, quantity}))\n\n\n      return;\n\n    case 'decrement':\n      console.log('-');\n      return;\n\n    case 'input':\n      console.log('+-');\n      return;\n\n    default:\n      return;\n  }\n};","map":{"version":3,"sources":["/Users/etimur/Desktop/vdsh/client/src/store/ropesOrder/operations.js"],"names":["getRopesOrder","addRopeToOrder","addRopeOrder","color_id","quantity","ropesOrder","dispatch","order","ropesOrderOperation","quantityAction","length","console","log","filter","item"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,aAA5B;AACA,SAAQC,cAAR,QAA6B,WAA7B;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,QAAX,EAAqBC,UAArB,KAAoCC,QAAQ,IAAI;AACxE,MAAID,UAAJ,EAAgB;AACZ,UAAME,KAAK,GAAG,EAAd;AACAD,IAAAA,QAAQ,CAACL,cAAc,CAACE,QAAD,EAAWC,QAAX,CAAf,CAAR;AACH;AACJ,CALM;AAOP,OAAO,MAAMI,mBAAmB,GAAG,CAACD,KAAD,EAAQE,cAAR,EAAwBN,QAAxB,EAAkCC,QAAlC,KAA+CE,QAAQ,IAAI;AAE1F,UAAQG,cAAR;AACI,SAAK,WAAL;AACI;AACA,UAAIF,KAAK,CAACG,MAAN,GAAe,CAAnB,EAAsB;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAL,QAAAA,KAAK,GAAGA,KAAK,CAACM,MAAN,CAAcC,IAAD,IAAU;AAC3B,iBAAOA,IAAI,CAACX,QAAL,KAAkBA,QAAzB;AACH,SAFO,CAAR;AAGAQ,QAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACAD,QAAAA,QAAQ,CAACL,cAAc,CAAC,CAAC,GAAGM,KAAJ,CAAD,CAAf,CAAR;AACH,OAPD,MAOO;AACHI,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAN,QAAAA,QAAQ,CAACL,cAAc,CAAC,CAAC,GAAGM,KAAJ,CAAD,CAAf,CAAR;AACH,OAZL,CAcI;AACA;AACA;AACA;AACQ;AACJ;AACJ;AACA;;;AACA;;AACJ,SAAK,WAAL;AACII,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA;;AACJ,SAAK,OAAL;AACID,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA;;AACJ;AACI;AA/BR;AAiCH,CAnCM","sourcesContent":["import {getRopesOrder} from \"./selectors\";\nimport {addRopeToOrder} from \"./actions\";\n\nexport const addRopeOrder = (color_id, quantity, ropesOrder) => dispatch => {\n    if (ropesOrder) {\n        const order = {}\n        dispatch(addRopeToOrder(color_id, quantity))\n    }\n}\n\nexport const ropesOrderOperation = (order, quantityAction, color_id, quantity) => dispatch => {\n\n    switch (quantityAction) {\n        case 'increment':\n            // order = [...order, {color_id, quantity}];\n            if (order.length > 1) {\n                console.log('else order')\n                order = order.filter((item) => {\n                    return item.color_id === color_id\n                });\n                console.log(order);\n                dispatch(addRopeToOrder([...order]));\n            } else {\n                console.log('first order')\n                dispatch(addRopeToOrder([...order]));\n            }\n\n            // order.forEach(item => {\n            //     if (item.color_id === color_id) {\n            //         console.log('remove');\n            //\n                    // dispatch(addRopeToOrder({color_id, quantity}))\n                // }\n            // })\n            // dispatch(addRopeToOrder({color_id, quantity}))\n            return;\n        case 'decrement':\n            console.log('-');\n            return;\n        case 'input':\n            console.log('+-');\n            return;\n        default:\n            return;\n    }\n}"]},"metadata":{},"sourceType":"module"}
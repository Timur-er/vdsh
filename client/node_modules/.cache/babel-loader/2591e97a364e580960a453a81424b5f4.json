{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { useRoutes } from 'react-router-dom';\nimport { userRoutes } from \"./routes\";\nimport ContentContainer from \"../Components/ContentContainer/ContentContainer\";\nimport NavigationBar from \"../Components/NavigationBar/NavigationBar\";\nimport { addRoutesOperation } from \"../store/Routes/operations\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppContainer from \"../Components/AppContainer/AppContainer\";\nimport { getUserRole } from \"../store/User/selectors\";\n\nconst UserRoutes = () => {\n  const dispatch = useDispatch();\n  const role = useSelector(getUserRole);\n  const isRoleAvailable = role === 'USER' || role === 'MANAGER' || role === 'ADMIN';\n  const routes = userRoutes.map(route => {\n    return {\n      path: route.path,\n      element: route.element\n    };\n  });\n  const links = userRoutes.map(route => {\n    return {\n      path: route.path,\n      name: route.name\n    };\n  });\n  useEffect(() => {\n    if (isRoleAvailable) {\n      dispatch(addRoutesOperation(userRoutes));\n    }\n  }, [role, isRoleAvailable]);\n  const renderRoutes = useRoutes([...routes]);\n  return (\n    /*#__PURE__*/\n    // <AppContainer>\n    //     <NavigationBar />\n    //     <ContentContainer>\n    React.createElement(React.Fragment, null, isRoleAvailable && renderRoutes) // </ContentContainer>\n    // </AppContainer>\n\n  );\n};\n\nexport default UserRoutes;","map":{"version":3,"sources":["/Users/etimur/Desktop/vdsh/client/src/routes/UserRoutes.js"],"names":["React","useEffect","useRoutes","userRoutes","ContentContainer","NavigationBar","addRoutesOperation","useDispatch","useSelector","AppContainer","getUserRole","UserRoutes","dispatch","role","isRoleAvailable","routes","map","route","path","element","links","name","renderRoutes"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,UAAR,QAAyB,UAAzB;AACA,OAAOC,gBAAP,MAA6B,iDAA7B;AACA,OAAOC,aAAP,MAA0B,2CAA1B;AACA,SAAQC,kBAAR,QAAiC,4BAAjC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AACA,SAAQC,WAAR,QAA0B,yBAA1B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAMC,QAAQ,GAAEL,WAAW,EAA3B;AACA,QAAMM,IAAI,GAAGL,WAAW,CAACE,WAAD,CAAxB;AACA,QAAMI,eAAe,GAAGD,IAAI,KAAK,MAAT,IAAmBA,IAAI,KAAK,SAA5B,IAAyCA,IAAI,KAAK,OAA1E;AACA,QAAME,MAAM,GAAGZ,UAAU,CAACa,GAAX,CAAeC,KAAK,IAAI;AACnC,WAAO;AAACC,MAAAA,IAAI,EAAED,KAAK,CAACC,IAAb;AAAmBC,MAAAA,OAAO,EAAEF,KAAK,CAACE;AAAlC,KAAP;AACH,GAFc,CAAf;AAGA,QAAMC,KAAK,GAAGjB,UAAU,CAACa,GAAX,CAAeC,KAAK,IAAI;AAClC,WAAO;AAACC,MAAAA,IAAI,EAAED,KAAK,CAACC,IAAb;AAAmBG,MAAAA,IAAI,EAAEJ,KAAK,CAACI;AAA/B,KAAP;AACH,GAFa,CAAd;AAIApB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIa,eAAJ,EAAqB;AACjBF,MAAAA,QAAQ,CAACN,kBAAkB,CAACH,UAAD,CAAnB,CAAR;AACH;AACJ,GAJQ,EAIN,CAACU,IAAD,EAAOC,eAAP,CAJM,CAAT;AAOA,QAAMQ,YAAY,GAAGpB,SAAS,CAAC,CAAC,GAAGa,MAAJ,CAAD,CAA9B;AACA;AAAA;AACI;AACA;AACA;AACA,8CACKD,eAAe,IAAIQ,YADxB,CAJJ,CAMmB;AACf;;AAPJ;AASH,CA5BD;;AA8BA,eAAeX,UAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport {useRoutes} from 'react-router-dom';\nimport {userRoutes} from \"./routes\";\nimport ContentContainer from \"../Components/ContentContainer/ContentContainer\";\nimport NavigationBar from \"../Components/NavigationBar/NavigationBar\";\nimport {addRoutesOperation} from \"../store/Routes/operations\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport AppContainer from \"../Components/AppContainer/AppContainer\";\nimport {getUserRole} from \"../store/User/selectors\";\n\nconst UserRoutes = () => {\n    const dispatch =useDispatch();\n    const role = useSelector(getUserRole);\n    const isRoleAvailable = role === 'USER' || role === 'MANAGER' || role === 'ADMIN';\n    const routes = userRoutes.map(route => {\n        return {path: route.path, element: route.element}\n    })\n    const links = userRoutes.map(route => {\n        return {path: route.path, name: route.name}\n    })\n\n    useEffect(() => {\n        if (isRoleAvailable) {\n            dispatch(addRoutesOperation(userRoutes));\n        }\n    }, [role, isRoleAvailable]);\n\n\n    const renderRoutes = useRoutes([...routes])\n    return (\n        // <AppContainer>\n        //     <NavigationBar />\n        //     <ContentContainer>\n        <>\n            {isRoleAvailable && renderRoutes}\n        </>            // </ContentContainer>\n        // </AppContainer>\n    );\n};\n\nexport default UserRoutes;"]},"metadata":{},"sourceType":"module"}
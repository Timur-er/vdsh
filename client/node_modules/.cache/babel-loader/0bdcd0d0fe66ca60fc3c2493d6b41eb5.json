{"ast":null,"code":"var _jsxFileName = \"/Users/etimur/Desktop/vdsh/client/src/Pages/RopesInStockPage/RopesInStockPage.js\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Container from \"../../Components/Container/Container\";\nimport { useHttp } from \"../../Hooks/http.hook\";\nimport styles from './RopesInStockPage.module.scss';\nimport OrderInfo from \"../../Components/OrderInfo/OrderInfo\";\nimport { getAllRopes, getAllRopesBrand } from \"../../http/ropesAPI\";\nimport RopesTable from \"../../Components/RopesTable/RopesTable\";\n\nconst RopesInStockPage = () => {\n  // const {request} = useHttp();\n  // const [ropes, setRopes] = useState(null);\n  const [ropesBrand, setRopesBrand] = useState([]);\n\n  const selectBrandButtons = () => {\n    if (ropesBrand.length > 0) {\n      ropesBrand.map(brand => {\n        const {\n          brandName\n        } = brand;\n        console.log(brandName);\n        return /*#__PURE__*/React.createElement(\"button\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 24\n          }\n        }, brandName);\n      });\n    }\n  };\n\n  useEffect(async () => {\n    // const fetched = await getAllRopes()\n    const fetchedBrands = await getAllRopesBrand();\n    console.log(fetchedBrands.data);\n    setRopesBrand(fetchedBrands.data); // setRopes(fetched.data);\n  }, [selectBrandButtons]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"select brand\"), selectBrandButtons()));\n};\n\nexport default RopesInStockPage;","map":{"version":3,"sources":["/Users/etimur/Desktop/vdsh/client/src/Pages/RopesInStockPage/RopesInStockPage.js"],"names":["React","useCallback","useEffect","useState","Container","useHttp","styles","OrderInfo","getAllRopes","getAllRopesBrand","RopesTable","RopesInStockPage","ropesBrand","setRopesBrand","selectBrandButtons","length","map","brand","brandName","console","log","fetchedBrands","data"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAsD,OAAtD;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAAQC,OAAR,QAAsB,uBAAtB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAAQC,WAAR,EAAqBC,gBAArB,QAA4C,qBAA5C;AACA,OAAOC,UAAP,MAAuB,wCAAvB;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC3B;AACA;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMW,kBAAkB,GAAG,MAAM;AAC7B,QAAIF,UAAU,CAACG,MAAX,GAAoB,CAAxB,EAA2B;AACvBH,MAAAA,UAAU,CAACI,GAAX,CAAeC,KAAK,IAAI;AACpB,cAAM;AAACC,UAAAA;AAAD,YAAcD,KAApB;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASA,SAAT,CAAP;AACH,OAJD;AAKH;AACJ,GARD;;AAUAhB,EAAAA,SAAS,CAAC,YAAY;AAClB;AACA,UAAMmB,aAAa,GAAG,MAAMZ,gBAAgB,EAA5C;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYC,aAAa,CAACC,IAA1B;AACAT,IAAAA,aAAa,CAACQ,aAAa,CAACC,IAAf,CAAb,CAJkB,CAKlB;AACH,GANQ,EAMN,CAACR,kBAAD,CANM,CAAT;AAWA,sBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEKA,kBAAkB,EAFvB,CADJ,CADJ;AAaH,CAvCD;;AAyCA,eAAeH,gBAAf","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\nimport Container from \"../../Components/Container/Container\";\nimport {useHttp} from \"../../Hooks/http.hook\";\nimport styles from './RopesInStockPage.module.scss';\nimport OrderInfo from \"../../Components/OrderInfo/OrderInfo\";\nimport {getAllRopes, getAllRopesBrand} from \"../../http/ropesAPI\";\nimport RopesTable from \"../../Components/RopesTable/RopesTable\";\n\nconst RopesInStockPage = () => {\n    // const {request} = useHttp();\n    // const [ropes, setRopes] = useState(null);\n    const [ropesBrand, setRopesBrand] = useState([])\n\n    const selectBrandButtons = () => {\n        if (ropesBrand.length > 0) {\n            ropesBrand.map(brand => {\n                const {brandName} = brand;\n                console.log(brandName);\n                return <button>{brandName}</button>\n            })\n        }\n    }\n\n    useEffect(async () => {\n        // const fetched = await getAllRopes()\n        const fetchedBrands = await getAllRopesBrand();\n        console.log(fetchedBrands.data);\n        setRopesBrand(fetchedBrands.data)\n        // setRopes(fetched.data);\n    }, [selectBrandButtons])\n\n\n\n\n    return (\n        <Container>\n            <div>\n                <h1>select brand</h1>\n                {selectBrandButtons()}\n                {/*<OrderInfo/>*/}\n                {/*{ropes !== null && <RopesTable ropes={ropes}/>}*/}\n                {/*<div className={styles.confirmOrderSection}>*/}\n                {/*    <button className={styles.confirmOrderBtn}>confirm order</button>*/}\n                {/*</div>*/}\n            </div>\n        </Container>\n    );\n};\n\nexport default RopesInStockPage;"]},"metadata":{},"sourceType":"module"}
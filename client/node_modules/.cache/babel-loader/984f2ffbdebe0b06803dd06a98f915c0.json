{"ast":null,"code":"var _jsxFileName = \"/Users/etimur/Desktop/vdsh/client/src/Components/MenuBarLink/MenuBarLink.js\";\nimport React, { useState } from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport styles from './MenuBarLink.module.scss';\nimport Icons from \"../Icons/Icons\";\n\nconst MenuBarLink = _ref => {\n  let {\n    icon = 'userIcon',\n    path,\n    name,\n    color\n  } = _ref;\n  const [isHovered, setIsHovered] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n  const [linkStyle, setLinkStyle] = useState(`${styles.link}`);\n\n  const handleMouseEnter = () => {\n    setIsHovered(!isHovered);\n  };\n\n  const handleClick = () => {\n    setIsActive(!isActive);\n    setLinkStyle(`${styles.activeLink}`);\n  };\n\n  return /*#__PURE__*/React.createElement(NavLink, {\n    className: linkStyle,\n    to: path,\n    onMouseEnter: () => handleMouseEnter(),\n    onMouseLeave: () => handleMouseEnter(),\n    onClick: () => handleClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: styles.li,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.iconWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Icons, {\n    type: icon,\n    width: '35px',\n    height: '35px',\n    color: isHovered || isActive ? '#6495EDFF' : color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, name)));\n};\n\nexport default MenuBarLink;","map":{"version":3,"sources":["/Users/etimur/Desktop/vdsh/client/src/Components/MenuBarLink/MenuBarLink.js"],"names":["React","useState","NavLink","styles","Icons","MenuBarLink","icon","path","name","color","isHovered","setIsHovered","isActive","setIsActive","linkStyle","setLinkStyle","link","handleMouseEnter","handleClick","activeLink","li","iconWrapper","text"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,WAAW,GAAG,QAA4C;AAAA,MAA3C;AAACC,IAAAA,IAAI,GAAG,UAAR;AAAoBC,IAAAA,IAApB;AAA0BC,IAAAA,IAA1B;AAAgCC,IAAAA;AAAhC,GAA2C;AAE5D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAE,GAAEE,MAAM,CAACa,IAAK,EAAhB,CAA1C;;AAEA,QAAMC,gBAAgB,GAAG,MAAM;AAC3BN,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH,GAFD;;AAIA,QAAMQ,WAAW,GAAG,MAAM;AACtBL,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACAG,IAAAA,YAAY,CAAE,GAAEZ,MAAM,CAACgB,UAAW,EAAtB,CAAZ;AACH,GAHD;;AAKA,sBACI,oBAAC,OAAD;AACI,IAAA,SAAS,EAAEL,SADf;AAEI,IAAA,EAAE,EAAEP,IAFR;AAGI,IAAA,YAAY,EAAE,MAAMU,gBAAgB,EAHxC;AAII,IAAA,YAAY,EAAE,MAAMA,gBAAgB,EAJxC;AAKI,IAAA,OAAO,EAAE,MAAMC,WAAW,EAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQQ;AAAI,IAAA,SAAS,EAAEf,MAAM,CAACiB,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAEjB,MAAM,CAACkB,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAEf,IADV;AAEI,IAAA,KAAK,EAAE,MAFX;AAGI,IAAA,MAAM,EAAE,MAHZ;AAII,IAAA,KAAK,EAAEI,SAAS,IAAIE,QAAb,GAAwB,WAAxB,GAAsCH,KAJjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eASI;AAAM,IAAA,SAAS,EAAEN,MAAM,CAACmB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+Bd,IAA/B,CATJ,CARR,CADJ;AAwBH,CAvCD;;AAyCA,eAAeH,WAAf","sourcesContent":["import React, {useState} from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport styles from './MenuBarLink.module.scss';\nimport Icons from \"../Icons/Icons\";\n\nconst MenuBarLink = ({icon = 'userIcon', path, name, color}) => {\n\n    const [isHovered, setIsHovered] = useState(false);\n    const [isActive, setIsActive] = useState(false);\n    const [linkStyle, setLinkStyle] = useState(`${styles.link}`)\n\n    const handleMouseEnter = () => {\n        setIsHovered(!isHovered);\n    }\n\n    const handleClick = () => {\n        setIsActive(!isActive);\n        setLinkStyle(`${styles.activeLink}`)\n    }\n\n    return (\n        <NavLink\n            className={linkStyle}\n            to={path}\n            onMouseEnter={() => handleMouseEnter()}\n            onMouseLeave={() => handleMouseEnter()}\n            onClick={() => handleClick()}\n        >\n            {/*<ul className={styles.ul}>*/}\n                <li className={styles.li}>\n                    <span className={styles.iconWrapper}>\n                        <Icons\n                            type={icon}\n                            width={'35px'}\n                            height={'35px'}\n                            color={isHovered || isActive ? '#6495EDFF' : color}\n                        />\n                    </span>\n                    <span className={styles.text}>{name}</span>\n                </li>\n            {/*</ul>*/}\n        </NavLink>\n\n    );\n};\n\nexport default MenuBarLink;"]},"metadata":{},"sourceType":"module"}
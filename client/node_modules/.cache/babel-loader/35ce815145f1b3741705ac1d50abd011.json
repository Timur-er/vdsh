{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { useRoutes } from 'react-router-dom';\nimport { managerRoutes } from \"./routes\";\nimport ContentContainer from \"../Components/ContentContainer/ContentContainer\";\nimport NavigationBar from \"../Components/NavigationBar/NavigationBar\";\nimport { addRoutesOperation } from \"../store/Routes/operations\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppContainer from \"../Components/AppContainer/AppContainer\";\nimport { getUserRole } from \"../store/User/selectors\";\n\nconst ManagerRoutes = () => {\n  const dispatch = useDispatch();\n  const role = useSelector(getUserRole);\n  const isRoleAvailable = role === 'MANAGER' || role === 'ADMIN';\n  const routes = managerRoutes.map(route => {\n    return {\n      path: route.path,\n      element: route.element\n    };\n  });\n  const links = managerRoutes.map(route => {\n    return {\n      path: route.path,\n      name: route.name\n    };\n  });\n  useEffect(() => {\n    if (isRoleAvailable) {\n      dispatch(addRoutesOperation(managerRoutes));\n    }\n  }, []);\n  const renderRoutes = useRoutes([...routes]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isRoleAvailable && renderRoutes) // <AppContainer>\n  //     <NavigationBar />\n  //     <ContentContainer>\n  // </ContentContainer>\n  // </AppContainer>\n  ;\n};\n\nexport default ManagerRoutes;","map":{"version":3,"sources":["/Users/etimur/Desktop/vdsh/client/src/routes/ManagerRoutes.js"],"names":["React","useEffect","useRoutes","managerRoutes","ContentContainer","NavigationBar","addRoutesOperation","useDispatch","useSelector","AppContainer","getUserRole","ManagerRoutes","dispatch","role","isRoleAvailable","routes","map","route","path","element","links","name","renderRoutes"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,aAAR,QAA4B,UAA5B;AACA,OAAOC,gBAAP,MAA6B,iDAA7B;AACA,OAAOC,aAAP,MAA0B,2CAA1B;AACA,SAAQC,kBAAR,QAAiC,4BAAjC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AACA,SAAQC,WAAR,QAA0B,yBAA1B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AACxB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,IAAI,GAAGL,WAAW,CAACE,WAAD,CAAxB;AACA,QAAMI,eAAe,GAAGD,IAAI,KAAK,SAAT,IAAsBA,IAAI,KAAK,OAAvD;AAEA,QAAME,MAAM,GAAGZ,aAAa,CAACa,GAAd,CAAkBC,KAAK,IAAI;AACtC,WAAO;AAACC,MAAAA,IAAI,EAAED,KAAK,CAACC,IAAb;AAAmBC,MAAAA,OAAO,EAAEF,KAAK,CAACE;AAAlC,KAAP;AACH,GAFc,CAAf;AAGA,QAAMC,KAAK,GAAGjB,aAAa,CAACa,GAAd,CAAkBC,KAAK,IAAI;AACrC,WAAO;AAACC,MAAAA,IAAI,EAAED,KAAK,CAACC,IAAb;AAAmBG,MAAAA,IAAI,EAAEJ,KAAK,CAACI;AAA/B,KAAP;AACH,GAFa,CAAd;AAIApB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIa,eAAJ,EAAqB;AACjBF,MAAAA,QAAQ,CAACN,kBAAkB,CAACH,aAAD,CAAnB,CAAR;AACH;AACJ,GAJQ,EAIN,EAJM,CAAT;AAOA,QAAMmB,YAAY,GAAGpB,SAAS,CAAC,CAAC,GAAGa,MAAJ,CAAD,CAA9B;AACA,sBACI,0CACKD,eAAe,IAAIQ,YADxB,CADJ,CAIQ;AACA;AACA;AACI;AACJ;AARR;AAUH,CA9BD;;AAgCA,eAAeX,aAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport {useRoutes} from 'react-router-dom';\nimport {managerRoutes} from \"./routes\";\nimport ContentContainer from \"../Components/ContentContainer/ContentContainer\";\nimport NavigationBar from \"../Components/NavigationBar/NavigationBar\";\nimport {addRoutesOperation} from \"../store/Routes/operations\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport AppContainer from \"../Components/AppContainer/AppContainer\";\nimport {getUserRole} from \"../store/User/selectors\";\n\nconst ManagerRoutes = () => {\n    const dispatch = useDispatch();\n    const role = useSelector(getUserRole);\n    const isRoleAvailable = role === 'MANAGER' || role === 'ADMIN';\n\n    const routes = managerRoutes.map(route => {\n        return {path: route.path, element: route.element}\n    })\n    const links = managerRoutes.map(route => {\n        return {path: route.path, name: route.name}\n    })\n\n    useEffect(() => {\n        if (isRoleAvailable) {\n            dispatch(addRoutesOperation(managerRoutes));\n        }\n    }, []);\n\n\n    const renderRoutes = useRoutes([...routes])\n    return (\n        <>\n            {isRoleAvailable && renderRoutes}\n        </>\n            // <AppContainer>\n            //     <NavigationBar />\n            //     <ContentContainer>\n                // </ContentContainer>\n            // </AppContainer>\n    );\n};\n\nexport default ManagerRoutes;"]},"metadata":{},"sourceType":"module"}
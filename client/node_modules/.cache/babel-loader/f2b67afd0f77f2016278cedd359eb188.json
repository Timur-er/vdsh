{"ast":null,"code":"import { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\"; // import {loginUser} from \"../store/User/actions\";\n\nimport { loginUserOperation } from \"../store/User/operations\";\nexport const useAuth = () => {\n  const [email, setEmail] = useState();\n  const [name, setName] = useState();\n  const [surname, setSurname] = useState();\n  const [shop_id, setShopId] = useState();\n  const [token, setToken] = useState();\n  const dispatch = useDispatch();\n  const login = useCallback((email, name, surname, shop_id, jwtToken) => {\n    setEmail(email);\n    setName(name);\n    setSurname(surname);\n    setShopId(shop_id);\n    setToken(jwtToken);\n    const user = {\n      email,\n      name,\n      surname,\n      shop_id,\n      jwtToken\n    };\n    dispatch(loginUserOperation(email, name, surname, shop_id, jwtToken));\n    localStorage.setItem('userData', JSON.stringify(user));\n  }, []);\n  useEffect(() => {\n    const userData = JSON.parse(localStorage.getItem('userData'));\n    console.log(userData);\n\n    if (userData && userData.jwtToken) {\n      const {\n        email,\n        name,\n        surname,\n        shop_id,\n        jwtToken\n      } = userData;\n      login(email, name, surname, shop_id, jwtToken);\n    }\n  }, [login]);\n  return {\n    login\n  };\n};","map":{"version":3,"sources":["/Users/etimur/Desktop/vdsh/client/src/Hooks/auth.hook.js"],"names":["useCallback","useEffect","useState","useDispatch","loginUserOperation","useAuth","email","setEmail","name","setName","surname","setSurname","shop_id","setShopId","token","setToken","dispatch","login","jwtToken","user","localStorage","setItem","JSON","stringify","userData","parse","getItem","console","log"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,SAArB,EAAgCC,QAAhC,QAA+C,OAA/C;AACA,SAAQC,WAAR,QAA0B,aAA1B,C,CACA;;AACA,SAAQC,kBAAR,QAAiC,0BAAjC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,EAAlC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,EAAhC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,EAAtC;AACA,QAAM,CAACU,OAAD,EAAUC,SAAV,IAAuBX,QAAQ,EAArC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,EAAlC;AACA,QAAMc,QAAQ,GAAGb,WAAW,EAA5B;AAEA,QAAMc,KAAK,GAAGjB,WAAW,CAAC,CAACM,KAAD,EAAQE,IAAR,EAAcE,OAAd,EAAuBE,OAAvB,EAAgCM,QAAhC,KAA6C;AACnEX,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,UAAU,CAACD,OAAD,CAAV;AACAG,IAAAA,SAAS,CAACD,OAAD,CAAT;AACAG,IAAAA,QAAQ,CAACG,QAAD,CAAR;AAEA,UAAMC,IAAI,GAAG;AAACb,MAAAA,KAAD;AAAQE,MAAAA,IAAR;AAAcE,MAAAA,OAAd;AAAuBE,MAAAA,OAAvB;AAAgCM,MAAAA;AAAhC,KAAb;AACAF,IAAAA,QAAQ,CAACZ,kBAAkB,CAACE,KAAD,EAAQE,IAAR,EAAcE,OAAd,EAAuBE,OAAvB,EAAgCM,QAAhC,CAAnB,CAAR;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAjC;AACH,GAVwB,EAUtB,EAVsB,CAAzB;AAYAlB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMuB,QAAQ,GAAGF,IAAI,CAACG,KAAL,CAAWL,YAAY,CAACM,OAAb,CAAqB,UAArB,CAAX,CAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;;AACA,QAAIA,QAAQ,IAAIA,QAAQ,CAACN,QAAzB,EAAmC;AAC/B,YAAM;AAACZ,QAAAA,KAAD;AAAQE,QAAAA,IAAR;AAAcE,QAAAA,OAAd;AAAuBE,QAAAA,OAAvB;AAAgCM,QAAAA;AAAhC,UAA4CM,QAAlD;AACAP,MAAAA,KAAK,CAACX,KAAD,EAAQE,IAAR,EAAcE,OAAd,EAAuBE,OAAvB,EAAgCM,QAAhC,CAAL;AACH;AACJ,GAPQ,EAON,CAACD,KAAD,CAPM,CAAT;AASA,SAAO;AAACA,IAAAA;AAAD,GAAP;AACH,CA9BM","sourcesContent":["import {useCallback, useEffect, useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\n// import {loginUser} from \"../store/User/actions\";\nimport {loginUserOperation} from \"../store/User/operations\";\n\nexport const useAuth = () => {\n    const [email, setEmail] = useState();\n    const [name, setName] = useState();\n    const [surname, setSurname] = useState();\n    const [shop_id, setShopId] = useState();\n    const [token, setToken] = useState();\n    const dispatch = useDispatch();\n\n    const login = useCallback((email, name, surname, shop_id, jwtToken) => {\n        setEmail(email);\n        setName(name);\n        setSurname(surname);\n        setShopId(shop_id);\n        setToken(jwtToken);\n\n        const user = {email, name, surname, shop_id, jwtToken}\n        dispatch(loginUserOperation(email, name, surname, shop_id, jwtToken))\n        localStorage.setItem('userData', JSON.stringify(user));\n    }, [])\n\n    useEffect(() => {\n        const userData = JSON.parse(localStorage.getItem('userData'));\n        console.log(userData);\n        if (userData && userData.jwtToken) {\n            const {email, name, surname, shop_id, jwtToken} = userData\n            login(email, name, surname, shop_id, jwtToken);\n        }\n    }, [login])\n\n    return {login}\n}"]},"metadata":{},"sourceType":"module"}
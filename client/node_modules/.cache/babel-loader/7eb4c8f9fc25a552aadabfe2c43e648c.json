{"ast":null,"code":"var _jsxFileName = \"/Users/etimur/Desktop/vdsh/client/src/Components/MenuBarLink/MenuBarLink.js\";\nimport React, { useEffect, useState } from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport styles from './MenuBarLink.module.scss';\nimport Icons from \"../Icons/Icons\";\n\nconst MenuBarLink = _ref => {\n  let {\n    icon = 'userIcon',\n    path,\n    name,\n    color,\n    isActive\n  } = _ref;\n  const [isHovered, setIsHovered] = useState(false); // const [isActive, setIsActive] = useState( false);\n\n  const [linkStyle, setLinkStyle] = useState(`${styles.link}`);\n  const [activePath, setActivePath] = useState('');\n  useEffect(() => {\n    if (isActive) {\n      setLinkStyle(`${styles.activeLink}`);\n    } else {\n      setLinkStyle(`${styles.link}`);\n    }\n  }, []);\n\n  const handleMouseEnter = () => {\n    setIsHovered(!isHovered);\n  };\n\n  const handleClick = () => {\n    // setIsActive(!isActive);\n    if (activePath !== path) {\n      setLinkStyle(`${styles.activeLink}`);\n      setActivePath(path);\n    } else {\n      setLinkStyle(`${styles.link}`);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(NavLink, {\n    className: linkStyle,\n    to: path,\n    onMouseEnter: () => handleMouseEnter(),\n    onMouseLeave: () => handleMouseEnter(),\n    onClick: () => handleClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: styles.li,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.iconWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Icons, {\n    type: icon,\n    width: '35px',\n    height: '35px',\n    color: isHovered || isActive ? '#6495EDFF' : color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, name)));\n};\n\nexport default MenuBarLink;","map":{"version":3,"sources":["/Users/etimur/Desktop/vdsh/client/src/Components/MenuBarLink/MenuBarLink.js"],"names":["React","useEffect","useState","NavLink","styles","Icons","MenuBarLink","icon","path","name","color","isActive","isHovered","setIsHovered","linkStyle","setLinkStyle","link","activePath","setActivePath","activeLink","handleMouseEnter","handleClick","li","iconWrapper","text"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,WAAW,GAAG,QAAsD;AAAA,MAArD;AAACC,IAAAA,IAAI,GAAG,UAAR;AAAoBC,IAAAA,IAApB;AAA0BC,IAAAA,IAA1B;AAAgCC,IAAAA,KAAhC;AAAuCC,IAAAA;AAAvC,GAAqD;AAEtE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C,CAFsE,CAGtE;;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAE,GAAEE,MAAM,CAACY,IAAK,EAAhB,CAA1C;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,QAAJ,EAAc;AACVI,MAAAA,YAAY,CAAE,GAAEX,MAAM,CAACe,UAAW,EAAtB,CAAZ;AACH,KAFD,MAEO;AACHJ,MAAAA,YAAY,CAAE,GAAEX,MAAM,CAACY,IAAK,EAAhB,CAAZ;AACH;AACJ,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMI,gBAAgB,GAAG,MAAM;AAC3BP,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH,GAFD;;AAIA,QAAMS,WAAW,GAAG,MAAM;AACtB;AACA,QAAIJ,UAAU,KAAKT,IAAnB,EAAyB;AACrBO,MAAAA,YAAY,CAAE,GAAEX,MAAM,CAACe,UAAW,EAAtB,CAAZ;AACAD,MAAAA,aAAa,CAACV,IAAD,CAAb;AACH,KAHD,MAGO;AACHO,MAAAA,YAAY,CAAE,GAAEX,MAAM,CAACY,IAAK,EAAhB,CAAZ;AACH;AACJ,GARD;;AAUA,sBACI,oBAAC,OAAD;AACI,IAAA,SAAS,EAAEF,SADf;AAEI,IAAA,EAAE,EAAEN,IAFR;AAGI,IAAA,YAAY,EAAE,MAAMY,gBAAgB,EAHxC;AAII,IAAA,YAAY,EAAE,MAAMA,gBAAgB,EAJxC;AAKI,IAAA,OAAO,EAAE,MAAMC,WAAW,EAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQQ;AAAI,IAAA,SAAS,EAAEjB,MAAM,CAACkB,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAElB,MAAM,CAACmB,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAEhB,IADV;AAEI,IAAA,KAAK,EAAE,MAFX;AAGI,IAAA,MAAM,EAAE,MAHZ;AAII,IAAA,KAAK,EAAEK,SAAS,IAAID,QAAb,GAAwB,WAAxB,GAAsCD,KAJjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eASI;AAAM,IAAA,SAAS,EAAEN,MAAM,CAACoB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+Bf,IAA/B,CATJ,CARR,CADJ;AAwBH,CArDD;;AAuDA,eAAeH,WAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport styles from './MenuBarLink.module.scss';\nimport Icons from \"../Icons/Icons\";\n\nconst MenuBarLink = ({icon = 'userIcon', path, name, color, isActive}) => {\n\n    const [isHovered, setIsHovered] = useState(false);\n    // const [isActive, setIsActive] = useState( false);\n    const [linkStyle, setLinkStyle] = useState(`${styles.link}`)\n    const [activePath, setActivePath] = useState('');\n\n    useEffect(() => {\n        if (isActive) {\n            setLinkStyle(`${styles.activeLink}`);\n        } else {\n            setLinkStyle(`${styles.link}`);\n        }\n    }, [])\n\n    const handleMouseEnter = () => {\n        setIsHovered(!isHovered);\n    }\n\n    const handleClick = () => {\n        // setIsActive(!isActive);\n        if (activePath !== path) {\n            setLinkStyle(`${styles.activeLink}`)\n            setActivePath(path);\n        } else {\n            setLinkStyle(`${styles.link}`)\n        }\n    }\n\n    return (\n        <NavLink\n            className={linkStyle}\n            to={path}\n            onMouseEnter={() => handleMouseEnter()}\n            onMouseLeave={() => handleMouseEnter()}\n            onClick={() => handleClick()}\n        >\n            {/*<ul className={styles.ul}>*/}\n                <li className={styles.li}>\n                    <span className={styles.iconWrapper}>\n                        <Icons\n                            type={icon}\n                            width={'35px'}\n                            height={'35px'}\n                            color={isHovered || isActive ? '#6495EDFF' : color}\n                        />\n                    </span>\n                    <span className={styles.text}>{name}</span>\n                </li>\n            {/*</ul>*/}\n        </NavLink>\n\n    );\n};\n\nexport default MenuBarLink;"]},"metadata":{},"sourceType":"module"}
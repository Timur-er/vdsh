{"ast":null,"code":"import { useCallback, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { loginUserOperation } from \"../store/User/operations\";\nimport { getNewAccessTokenAPI } from \"../http/userAPI\";\nexport const useAuth = () => {\n  const dispatch = useDispatch();\n  const login = useCallback((user_id, email, name, surname, shop_id, role, jwtToken, isActivated) => {\n    dispatch(loginUserOperation(user_id, email, name, surname, shop_id, role, jwtToken, isActivated));\n    localStorage.setItem('jwtToken', JSON.stringify(jwtToken));\n  }, [dispatch]);\n  useEffect(() => {\n    async function refreshUserData() {\n      const token = JSON.parse(localStorage.getItem('jwtToken'));\n\n      if (token) {\n        const newAccessToken = await getNewAccessTokenAPI();\n        const newToken = newAccessToken.data.accessToken;\n        const {\n          user_id,\n          email,\n          name,\n          surname,\n          role,\n          shop_id,\n          isActivated\n        } = newAccessToken.data.user;\n        login(user_id, email, name, surname, shop_id, role, newToken, isActivated);\n      }\n    }\n\n    refreshUserData();\n  }, [login]);\n  return {\n    login\n  };\n};","map":{"version":3,"sources":["/Users/etimur/Desktop/vdsh/client/src/Hooks/auth.hook.js"],"names":["useCallback","useEffect","useDispatch","loginUserOperation","getNewAccessTokenAPI","useAuth","dispatch","login","user_id","email","name","surname","shop_id","role","jwtToken","isActivated","localStorage","setItem","JSON","stringify","refreshUserData","token","parse","getItem","newAccessToken","newToken","data","accessToken","user"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,SAArB,QAAqC,OAArC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,kBAAR,QAAiC,0BAAjC;AACA,SAAQC,oBAAR,QAAmC,iBAAnC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AACzB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA,QAAMK,KAAK,GAAGP,WAAW,CAAE,CAACQ,OAAD,EAAUC,KAAV,EAAiBC,IAAjB,EAAuBC,OAAvB,EAAgCC,OAAhC,EAAyCC,IAAzC,EAA+CC,QAA/C,EAAyDC,WAAzD,KAAyE;AAChGT,IAAAA,QAAQ,CAACH,kBAAkB,CAACK,OAAD,EAAUC,KAAV,EAAiBC,IAAjB,EAAuBC,OAAvB,EAAgCC,OAAhC,EAAyCC,IAAzC,EAA+CC,QAA/C,EAAyDC,WAAzD,CAAnB,CAAR;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,QAAf,CAAjC;AACH,GAHwB,EAGtB,CAACR,QAAD,CAHsB,CAAzB;AAKAL,EAAAA,SAAS,CAAE,MAAM;AACb,mBAAemB,eAAf,GAAiC;AAC7B,YAAMC,KAAK,GAAGH,IAAI,CAACI,KAAL,CAAWN,YAAY,CAACO,OAAb,CAAqB,UAArB,CAAX,CAAd;;AACA,UAAIF,KAAJ,EAAW;AACP,cAAMG,cAAc,GAAG,MAAMpB,oBAAoB,EAAjD;AACA,cAAMqB,QAAQ,GAAGD,cAAc,CAACE,IAAf,CAAoBC,WAArC;AACA,cAAM;AAACnB,UAAAA,OAAD;AAAUC,UAAAA,KAAV;AAAiBC,UAAAA,IAAjB;AAAuBC,UAAAA,OAAvB;AAAgCE,UAAAA,IAAhC;AAAsCD,UAAAA,OAAtC;AAA+CG,UAAAA;AAA/C,YAA8DS,cAAc,CAACE,IAAf,CAAoBE,IAAxF;AACArB,QAAAA,KAAK,CAACC,OAAD,EAAUC,KAAV,EAAiBC,IAAjB,EAAuBC,OAAvB,EAAgCC,OAAhC,EAAyCC,IAAzC,EAA+CY,QAA/C,EAAyDV,WAAzD,CAAL;AACH;AACJ;;AACFK,IAAAA,eAAe;AACjB,GAXQ,EAWN,CAACb,KAAD,CAXM,CAAT;AAaA,SAAO;AAACA,IAAAA;AAAD,GAAP;AACH,CAtBM","sourcesContent":["import {useCallback, useEffect} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {loginUserOperation} from \"../store/User/operations\";\nimport {getNewAccessTokenAPI} from \"../http/userAPI\";\n\nexport const useAuth = () => {\n    const dispatch = useDispatch();\n\n    const login = useCallback( (user_id, email, name, surname, shop_id, role, jwtToken, isActivated) => {\n        dispatch(loginUserOperation(user_id, email, name, surname, shop_id, role, jwtToken, isActivated))\n        localStorage.setItem('jwtToken', JSON.stringify(jwtToken));\n    }, [dispatch])\n\n    useEffect( () => {\n        async function refreshUserData() {\n            const token = JSON.parse(localStorage.getItem('jwtToken'));\n            if (token) {\n                const newAccessToken = await getNewAccessTokenAPI();\n                const newToken = newAccessToken.data.accessToken;\n                const {user_id, email, name, surname, role, shop_id, isActivated} = newAccessToken.data.user;\n                login(user_id, email, name, surname, shop_id, role, newToken, isActivated);\n            }\n        }\n       refreshUserData();\n    }, [login])\n\n    return {login}\n}"]},"metadata":{},"sourceType":"module"}
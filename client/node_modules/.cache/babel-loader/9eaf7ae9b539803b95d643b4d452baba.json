{"ast":null,"code":"var _jsxFileName = \"/Users/etimur/Desktop/vdsh/client/src/Pages/RopesInStockPage/RopesInStockPage.js\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Container from \"../../Components/Container/Container\";\nimport { useHttp } from \"../../Hooks/http.hook\";\nimport styles from './RopesInStockPage.module.scss';\nimport OrderInfo from \"../../Components/OrderInfo/OrderInfo\";\nimport { getAllRopes, getAllRopesBrand, getRopesByBrand } from \"../../http/ropesAPI\";\nimport RopesTable from \"../../Components/RopesTable/RopesTable\";\nimport { useDispatch } from \"react-redux\";\nimport { setOrderBrandOperation } from \"../../store/ropesOrder/operations\";\n\nconst RopesInStockPage = () => {\n  const [ropes, setRopes] = useState(null);\n  const [ropesBrand, setRopesBrand] = useState([]);\n  const dispatch = useDispatch();\n  useEffect(async () => {\n    const fetchedBrands = await getAllRopesBrand();\n    setRopesBrand(fetchedBrands.data);\n  }, []);\n\n  const getRopes = async (brand, id) => {\n    const ropes = await getRopesByBrand(id);\n    dispatch(setOrderBrandOperation(brand, id));\n    setRopes(ropes.data);\n  };\n\n  const selectBrandButtons = ropesBrand.map(brand => {\n    const {\n      brandName,\n      id\n    } = brand;\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: styles.selectBrandButton,\n      key: id,\n      onClick: () => getRopes(brandName, id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 16\n      }\n    }, brandName);\n  });\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0435\\u0442\\u0435 \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0438\\u0442\\u0435\\u043B\\u044F:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.selectBrandSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, selectBrandButtons), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.ropesTableSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, ropes !== null && /*#__PURE__*/React.createElement(RopesTable, {\n    ropes: ropes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 40\n    }\n  }))));\n};\n\nexport default RopesInStockPage;","map":{"version":3,"sources":["/Users/etimur/Desktop/vdsh/client/src/Pages/RopesInStockPage/RopesInStockPage.js"],"names":["React","useCallback","useEffect","useState","Container","useHttp","styles","OrderInfo","getAllRopes","getAllRopesBrand","getRopesByBrand","RopesTable","useDispatch","setOrderBrandOperation","RopesInStockPage","ropes","setRopes","ropesBrand","setRopesBrand","dispatch","fetchedBrands","data","getRopes","brand","id","selectBrandButtons","map","brandName","selectBrandButton","selectBrandSection","ropesTableSection"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAsD,OAAtD;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAAQC,OAAR,QAAsB,uBAAtB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAAQC,WAAR,EAAqBC,gBAArB,EAAuCC,eAAvC,QAA6D,qBAA7D;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,sBAAR,QAAqC,mCAArC;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMgB,QAAQ,GAAGP,WAAW,EAA5B;AAEAV,EAAAA,SAAS,CAAC,YAAY;AAClB,UAAMkB,aAAa,GAAG,MAAMX,gBAAgB,EAA5C;AACAS,IAAAA,aAAa,CAACE,aAAa,CAACC,IAAf,CAAb;AACH,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMC,QAAQ,GAAG,OAAOC,KAAP,EAAcC,EAAd,KAAqB;AAClC,UAAMT,KAAK,GAAG,MAAML,eAAe,CAACc,EAAD,CAAnC;AACAL,IAAAA,QAAQ,CAACN,sBAAsB,CAACU,KAAD,EAAQC,EAAR,CAAvB,CAAR;AACAR,IAAAA,QAAQ,CAACD,KAAK,CAACM,IAAP,CAAR;AACH,GAJD;;AAMA,QAAMI,kBAAkB,GAAGR,UAAU,CAACS,GAAX,CAAeH,KAAK,IAAI;AAC/C,UAAM;AAACI,MAAAA,SAAD;AAAYH,MAAAA;AAAZ,QAAkBD,KAAxB;AACA,wBAAO;AAAQ,MAAA,SAAS,EAAEjB,MAAM,CAACsB,iBAA1B;AAA6C,MAAA,GAAG,EAAEJ,EAAlD;AAAsD,MAAA,OAAO,EAAE,MAAMF,QAAQ,CAACK,SAAD,EAAYH,EAAZ,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+FG,SAA/F,CAAP;AACH,GAH0B,CAA3B;AAKA,sBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wIADJ,eAEI;AAAK,IAAA,SAAS,EAAErB,MAAM,CAACuB,kBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,kBADL,CAFJ,eAMI;AAAK,IAAA,SAAS,EAAEnB,MAAM,CAACwB,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKf,KAAK,KAAK,IAAV,iBAAkB,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEA,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADvB,CANJ,CADJ,CADJ;AAiBH,CAtCD;;AAwCA,eAAeD,gBAAf","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\nimport Container from \"../../Components/Container/Container\";\nimport {useHttp} from \"../../Hooks/http.hook\";\nimport styles from './RopesInStockPage.module.scss';\nimport OrderInfo from \"../../Components/OrderInfo/OrderInfo\";\nimport {getAllRopes, getAllRopesBrand, getRopesByBrand} from \"../../http/ropesAPI\";\nimport RopesTable from \"../../Components/RopesTable/RopesTable\";\nimport {useDispatch} from \"react-redux\";\nimport {setOrderBrandOperation} from \"../../store/ropesOrder/operations\";\n\nconst RopesInStockPage = () => {\n    const [ropes, setRopes] = useState(null);\n    const [ropesBrand, setRopesBrand] = useState([])\n    const dispatch = useDispatch();\n\n    useEffect(async () => {\n        const fetchedBrands = await getAllRopesBrand();\n        setRopesBrand(fetchedBrands.data)\n    }, [])\n\n    const getRopes = async (brand, id) => {\n        const ropes = await getRopesByBrand(id)\n        dispatch(setOrderBrandOperation(brand, id))\n        setRopes(ropes.data)\n    }\n\n    const selectBrandButtons = ropesBrand.map(brand => {\n        const {brandName, id} = brand;\n        return <button className={styles.selectBrandButton} key={id} onClick={() => getRopes(brandName, id)}>{brandName}</button>\n    })\n\n    return (\n        <Container>\n            <div>\n                <h1>Выберете производителя:</h1>\n                <div className={styles.selectBrandSection}>\n                    {selectBrandButtons}\n                </div>\n                {/*<OrderInfo/>*/}\n                <div className={styles.ropesTableSection}>\n                    {ropes !== null && <RopesTable ropes={ropes}/>}\n                </div>\n                {/*<div className={styles.confirmOrderSection}>*/}\n                {/*    <button className={styles.confirmOrderBtn}>confirm order</button>*/}\n                {/*</div>*/}\n            </div>\n        </Container>\n    );\n};\n\nexport default RopesInStockPage;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/etimur/Desktop/vdsh/client/src/Components/MenuBarLink/MenuBarLink.js\";\nimport React, { useState } from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport styles from './MenuBarLink.module.scss';\nimport Icons from \"../Icons/Icons\";\n\nconst MenuBarLink = _ref => {\n  let {\n    icon = 'userIcon',\n    path,\n    name,\n    color\n  } = _ref;\n  const [isHovered, setIsHovered] = useState(false);\n\n  const handleMouseEnter = () => {\n    setIsHovered(!isHovered);\n  };\n\n  return /*#__PURE__*/React.createElement(NavLink, {\n    className: styles.link,\n    to: path,\n    onMouseEnter: () => handleMouseEnter(),\n    onMouseLeave: () => handleMouseEnter(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: styles.ul,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: styles.li,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.iconWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, console.log(isHovered), /*#__PURE__*/React.createElement(Icons, {\n    type: icon,\n    width: '35px',\n    height: '35px',\n    color: isHovered ? '#000000' : color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, name))));\n};\n\nexport default MenuBarLink;","map":{"version":3,"sources":["/Users/etimur/Desktop/vdsh/client/src/Components/MenuBarLink/MenuBarLink.js"],"names":["React","useState","NavLink","styles","Icons","MenuBarLink","icon","path","name","color","isHovered","setIsHovered","handleMouseEnter","link","ul","li","iconWrapper","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,WAAW,GAAG,QAA4C;AAAA,MAA3C;AAACC,IAAAA,IAAI,GAAG,UAAR;AAAoBC,IAAAA,IAApB;AAA0BC,IAAAA,IAA1B;AAAgCC,IAAAA;AAAhC,GAA2C;AAE5D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMW,gBAAgB,GAAG,MAAM;AAC3BD,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH,GAFD;;AAIA,sBACI,oBAAC,OAAD;AACI,IAAA,SAAS,EAAEP,MAAM,CAACU,IADtB;AAEI,IAAA,EAAE,EAAEN,IAFR;AAGI,IAAA,YAAY,EAAE,MAAMK,gBAAgB,EAHxC;AAII,IAAA,YAAY,EAAE,MAAMA,gBAAgB,EAJxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI;AAAI,IAAA,SAAS,EAAET,MAAM,CAACW,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAEX,MAAM,CAACY,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAEZ,MAAM,CAACa,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,OAAO,CAACC,GAAR,CAAYR,SAAZ,CADL,eAEI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAEJ,IADV;AAEI,IAAA,KAAK,EAAE,MAFX;AAGI,IAAA,MAAM,EAAE,MAHZ;AAII,IAAA,KAAK,EAAEI,SAAS,GAAG,SAAH,GAAeD,KAJnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,IAAP,CAVJ,CADJ,CANJ,CADJ;AAwBH,CAhCD;;AAkCA,eAAeH,WAAf","sourcesContent":["import React, {useState} from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport styles from './MenuBarLink.module.scss';\nimport Icons from \"../Icons/Icons\";\n\nconst MenuBarLink = ({icon = 'userIcon', path, name, color}) => {\n\n    const [isHovered, setIsHovered] = useState(false);\n\n    const handleMouseEnter = () => {\n        setIsHovered(!isHovered);\n    }\n\n    return (\n        <NavLink\n            className={styles.link}\n            to={path}\n            onMouseEnter={() => handleMouseEnter()}\n            onMouseLeave={() => handleMouseEnter()}\n        >\n            <ul className={styles.ul}>\n                <li className={styles.li}>\n                    <span className={styles.iconWrapper}>\n                        {console.log(isHovered)}\n                        <Icons\n                            type={icon}\n                            width={'35px'}\n                            height={'35px'}\n                            color={isHovered ? '#000000' : color}\n                        />\n                    </span>\n                    <span>{name}</span>\n                </li>\n            </ul>\n        </NavLink>\n\n    );\n};\n\nexport default MenuBarLink;"]},"metadata":{},"sourceType":"module"}
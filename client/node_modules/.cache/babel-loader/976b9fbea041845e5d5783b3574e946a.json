{"ast":null,"code":"import { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\"; // import {loginUser} from \"../store/User/actions\";\n\nimport { loginUserOperation } from \"../store/User/operations\";\nimport { getNewAccessTokenAPI } from \"../http/userAPI\";\nexport const useAuth = () => {\n  const [email, setEmail] = useState();\n  const [name, setName] = useState();\n  const [surname, setSurname] = useState();\n  const [shop_id, setShopId] = useState();\n  const [token, setToken] = useState();\n  const [isActivated, setIsActivated] = useState(false);\n  const dispatch = useDispatch();\n  const login = useCallback((email, name, surname, shop_id, jwtToken, isActivated) => {\n    setEmail(email);\n    setName(name);\n    setSurname(surname);\n    setShopId(shop_id);\n    setToken(jwtToken);\n    setIsActivated(isActivated);\n    dispatch(loginUserOperation(email, name, surname, shop_id, jwtToken, isActivated));\n    localStorage.setItem('jwtToken', JSON.stringify(jwtToken));\n  }, []);\n  useEffect(async () => {\n    const token = JSON.parse(localStorage.getItem('jwtToken'));\n\n    if (token) {\n      const newAccessToken = await getNewAccessTokenAPI();\n      const newToken = newAccessToken.data.accessToken;\n      const {\n        email,\n        name,\n        surname,\n        shop_id,\n        isActivated\n      } = newAccessToken.data.user;\n      login(email, name, surname, shop_id, newToken, isActivated);\n    }\n  }, [login]);\n  return {\n    login\n  };\n};","map":{"version":3,"sources":["/Users/etimur/Desktop/vdsh/client/src/Hooks/auth.hook.js"],"names":["useCallback","useEffect","useState","useDispatch","loginUserOperation","getNewAccessTokenAPI","useAuth","email","setEmail","name","setName","surname","setSurname","shop_id","setShopId","token","setToken","isActivated","setIsActivated","dispatch","login","jwtToken","localStorage","setItem","JSON","stringify","parse","getItem","newAccessToken","newToken","data","accessToken","user"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,SAArB,EAAgCC,QAAhC,QAA+C,OAA/C;AACA,SAAQC,WAAR,QAA0B,aAA1B,C,CACA;;AACA,SAAQC,kBAAR,QAAiC,0BAAjC;AACA,SAAQC,oBAAR,QAAmC,iBAAnC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,EAAlC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,EAAhC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,EAAtC;AACA,QAAM,CAACW,OAAD,EAAUC,SAAV,IAAuBZ,QAAQ,EAArC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,EAAlC;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAMiB,QAAQ,GAAGhB,WAAW,EAA5B;AAEA,QAAMiB,KAAK,GAAGpB,WAAW,CAAE,CAACO,KAAD,EAAQE,IAAR,EAAcE,OAAd,EAAuBE,OAAvB,EAAgCQ,QAAhC,EAA0CJ,WAA1C,KAA0D;AACjFT,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,UAAU,CAACD,OAAD,CAAV;AACAG,IAAAA,SAAS,CAACD,OAAD,CAAT;AACAG,IAAAA,QAAQ,CAACK,QAAD,CAAR;AACAH,IAAAA,cAAc,CAACD,WAAD,CAAd;AAEAE,IAAAA,QAAQ,CAACf,kBAAkB,CAACG,KAAD,EAAQE,IAAR,EAAcE,OAAd,EAAuBE,OAAvB,EAAgCQ,QAAhC,EAA0CJ,WAA1C,CAAnB,CAAR;AACAK,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAAjC;AACH,GAVwB,EAUtB,EAVsB,CAAzB;AAYApB,EAAAA,SAAS,CAAC,YAAY;AAClB,UAAMc,KAAK,GAAGS,IAAI,CAACE,KAAL,CAAWJ,YAAY,CAACK,OAAb,CAAqB,UAArB,CAAX,CAAd;;AACA,QAAIZ,KAAJ,EAAW;AACP,YAAMa,cAAc,GAAG,MAAMvB,oBAAoB,EAAjD;AACA,YAAMwB,QAAQ,GAAGD,cAAc,CAACE,IAAf,CAAoBC,WAArC;AACA,YAAM;AAACxB,QAAAA,KAAD;AAAQE,QAAAA,IAAR;AAAcE,QAAAA,OAAd;AAAuBE,QAAAA,OAAvB;AAAgCI,QAAAA;AAAhC,UAA+CW,cAAc,CAACE,IAAf,CAAoBE,IAAzE;AACAZ,MAAAA,KAAK,CAACb,KAAD,EAAQE,IAAR,EAAcE,OAAd,EAAuBE,OAAvB,EAAgCgB,QAAhC,EAA0CZ,WAA1C,CAAL;AACH;AACJ,GARQ,EAQN,CAACG,KAAD,CARM,CAAT;AAUA,SAAO;AAACA,IAAAA;AAAD,GAAP;AACH,CAhCM","sourcesContent":["import {useCallback, useEffect, useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\n// import {loginUser} from \"../store/User/actions\";\nimport {loginUserOperation} from \"../store/User/operations\";\nimport {getNewAccessTokenAPI} from \"../http/userAPI\";\n\nexport const useAuth = () => {\n    const [email, setEmail] = useState();\n    const [name, setName] = useState();\n    const [surname, setSurname] = useState();\n    const [shop_id, setShopId] = useState();\n    const [token, setToken] = useState();\n    const [isActivated, setIsActivated] = useState(false)\n    const dispatch = useDispatch();\n\n    const login = useCallback( (email, name, surname, shop_id, jwtToken, isActivated) => {\n        setEmail(email);\n        setName(name);\n        setSurname(surname);\n        setShopId(shop_id);\n        setToken(jwtToken);\n        setIsActivated(isActivated)\n\n        dispatch(loginUserOperation(email, name, surname, shop_id, jwtToken, isActivated))\n        localStorage.setItem('jwtToken', JSON.stringify(jwtToken));\n    }, [])\n\n    useEffect(async () => {\n        const token = JSON.parse(localStorage.getItem('jwtToken'));\n        if (token) {\n            const newAccessToken = await getNewAccessTokenAPI();\n            const newToken = newAccessToken.data.accessToken;\n            const {email, name, surname, shop_id, isActivated} = newAccessToken.data.user;\n            login(email, name, surname, shop_id, newToken, isActivated);\n        }\n    }, [login])\n\n    return {login}\n}"]},"metadata":{},"sourceType":"module"}
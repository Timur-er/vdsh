{"ast":null,"code":"import { useCallback, useState } from \"react\";\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const request = useCallback(async function (url) {\n    let method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GET';\n    let body = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const api_url = process.env.REACT_APP_API_URL;\n    setLoading(true);\n\n    try {\n      if (body) {\n        body = JSON.stringify(body);\n        headers['Content-Type'] = 'application/json';\n      }\n\n      const response = await fetch(`${api_url}${url}`, {\n        method,\n        body,\n        headers\n      });\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || 'Smth went wrong!');\n      }\n\n      setLoading(false);\n      return data;\n    } catch (e) {\n      setLoading(false);\n      setError(e.message);\n      throw e;\n    }\n  }, []);\n  return {\n    loading,\n    request,\n    error\n  };\n};","map":{"version":3,"sources":["/Users/etimur/Desktop/vdsh/client/src/Hooks/http.hook.js"],"names":["useCallback","useState","useHttp","loading","setLoading","error","setError","request","url","method","body","headers","api_url","process","env","REACT_APP_API_URL","JSON","stringify","response","fetch","data","json","ok","Error","message","e"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,QAArB,QAAoC,OAApC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMM,OAAO,GAAGP,WAAW,CAAC,gBAAOQ,GAAP,EAA0D;AAAA,QAA9CC,MAA8C,uEAArC,KAAqC;AAAA,QAA9BC,IAA8B,uEAAvB,IAAuB;AAAA,QAAjBC,OAAiB,uEAAP,EAAO;AAClF,UAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;AACAX,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACA,UAAIM,IAAJ,EAAU;AACNA,QAAAA,IAAI,GAAGM,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAP;AACAC,QAAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACH;;AACD,YAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEP,OAAQ,GAAEJ,GAAI,EAAlB,EAAqB;AAACC,QAAAA,MAAD;AAASC,QAAAA,IAAT;AAAeC,QAAAA;AAAf,OAArB,CAA5B;AACA,YAAMS,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,UAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAL,IAAgB,kBAA1B,CAAN;AACH;;AACDpB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,aAAOgB,IAAP;AACH,KAbD,CAaE,OAAOK,CAAP,EAAU;AACRrB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACmB,CAAC,CAACD,OAAH,CAAR;AACA,YAAMC,CAAN;AACH;AACJ,GArB0B,EAqBxB,EArBwB,CAA3B;AAsBA,SAAO;AAACtB,IAAAA,OAAD;AAAUI,IAAAA,OAAV;AAAmBF,IAAAA;AAAnB,GAAP;AACH,CA3BM","sourcesContent":["import {useCallback, useState} from \"react\";\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\n        const api_url = process.env.REACT_APP_API_URL;\n        setLoading(true);\n        try {\n            if (body) {\n                body = JSON.stringify(body);\n                headers['Content-Type'] = 'application/json';\n            }\n            const response = await fetch(`${api_url}${url}`, {method, body, headers});\n            const data = await response.json();\n\n            if (!response.ok) {\n                throw new Error(data.message || 'Smth went wrong!')\n            }\n            setLoading(false);\n            return data;\n        } catch (e) {\n            setLoading(false);\n            setError(e.message);\n            throw e;\n        }\n    }, []);\n    return {loading, request, error}\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/etimur/Desktop/vdsh/client/src/Components/OrderField/OrderField.js\";\nimport React, { useRef, useState } from 'react';\nimport styles from './OrderField.module.scss';\nimport { Form, Formik, Field, ErrorMessage, FieldArray } from \"formik\";\nimport * as Yup from 'yup';\nimport { useHttp } from \"../../Hooks/http.hook\";\n\nconst OrderField = () => {\n  const {\n    loading,\n    error,\n    request\n  } = useHttp();\n  const validationSchema = Yup.object().shape({\n    // address: Yup\n    //     .string()\n    //     .required('укажите адресс'),\n    brand: Yup.string().required('Укажите марку'),\n    order: Yup.array(Yup.object({\n      quantity: Yup.string().min(1, 'введите кол-во').required('это обязатенльое поле'),\n      color_id: Yup.string().min(4, '4').max(4, '4').required('Это обязательное поле')\n    }).required())\n  });\n  const initialValues = {\n    // address: 'chreshatyk',\n    brand: 'DMC',\n    order: [{\n      quantity: '',\n      color_id: ''\n    }]\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Formik, {\n    validateOnChange: true,\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: async (values, _ref) => {\n      let {\n        setSubmitting\n      } = _ref;\n      console.log('post');\n      const {\n        brand: brandName,\n        order\n      } = values;\n      const createBrand = await request('/ropes/addRopeBrand', 'POST', {\n        brandName\n      });\n      const addRopesItems = await request('/ropes/addRopeItem', 'POST', {\n        order,\n        brandName\n      });\n      console.log(createBrand);\n      console.log(values);\n      setSubmitting(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, _ref2 => {\n    let {\n      values,\n      handleSubmit,\n      errors,\n      touched,\n      setTouched\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(Form, {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.orderSameData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }, \"\\u041F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0438\\u0442\\u0435\\u043B\\u044C:\", /*#__PURE__*/React.createElement(Field, {\n      as: \"select\",\n      name: \"brand\",\n      id: \"brand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"dmc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 37\n      }\n    }, \"DMC\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"ideal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 37\n      }\n    }, \"IDEAL\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"kirovo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 37\n      }\n    }, \"KIROVO\")))), /*#__PURE__*/React.createElement(FieldArray, {\n      name: 'order',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, _ref3 => {\n      let {\n        push,\n        remove\n      } = _ref3;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.formWrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 37\n        }\n      }, values.order.map((x, index) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: styles.form,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: styles.inputsWrapper,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 57\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: styles.inputLabel,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 61\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 65\n          }\n        }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E:\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: styles.inputContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 65\n          }\n        }, /*#__PURE__*/React.createElement(Field, {\n          className: styles.quantityInput,\n          name: `order.${index}.quantity`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 69\n          }\n        })), /*#__PURE__*/React.createElement(\"span\", {\n          className: styles.errorMsg,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 65\n          }\n        }, /*#__PURE__*/React.createElement(ErrorMessage, {\n          name: `order.${index}.quantity`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 99\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: styles.inputLabel,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 61\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 65\n          }\n        }, \"\\u0426\\u0432\\u0435\\u0442 \\u2116:\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: styles.inputContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 65\n          }\n        }, /*#__PURE__*/React.createElement(Field, {\n          name: `order.${index}.color_id`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 69\n          }\n        })), /*#__PURE__*/React.createElement(\"span\", {\n          className: styles.errorMsg,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 65\n          }\n        }, /*#__PURE__*/React.createElement(ErrorMessage, {\n          name: `order.${index}.color_id`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 99\n          }\n        })))), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => remove(index),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 57\n          }\n        }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"));\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.orderButtons,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: 'submit',\n        className: styles.orderBtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 41\n        }\n      }, \"\\u041E\\u0444\\u043E\\u0440\\u043C\\u0438\\u0442\\u044C \\u0437\\u0430\\u043A\\u0430\\u0437\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          push({\n            quantity: '',\n            color_id: ''\n          });\n        },\n        className: styles.orderBtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 41\n        }\n      }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0446\\u0432\\u0435\\u0442\")));\n    }));\n  }));\n};\n\nexport default OrderField;","map":{"version":3,"sources":["/Users/etimur/Desktop/vdsh/client/src/Components/OrderField/OrderField.js"],"names":["React","useRef","useState","styles","Form","Formik","Field","ErrorMessage","FieldArray","Yup","useHttp","OrderField","loading","error","request","validationSchema","object","shape","brand","string","required","order","array","quantity","min","color_id","max","initialValues","values","setSubmitting","console","log","brandName","createBrand","addRopesItems","handleSubmit","errors","touched","setTouched","orderSameData","push","remove","formWrapper","map","x","index","form","inputsWrapper","inputLabel","inputContainer","quantityInput","errorMsg","orderButtons","orderBtn"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\nimport styles from './OrderField.module.scss';\nimport {Form, Formik, Field, ErrorMessage, FieldArray} from \"formik\";\nimport * as Yup from 'yup';\nimport {useHttp} from \"../../Hooks/http.hook\";\n\nconst OrderField = () => {\n   const {loading, error, request} = useHttp();\n\n\n    const validationSchema = Yup.object().shape({\n        // address: Yup\n        //     .string()\n        //     .required('укажите адресс'),\n        brand: Yup\n            .string()\n            .required('Укажите марку'),\n        order: Yup.array(\n            Yup.object({\n                quantity: Yup\n                    .string()\n                    .min(1, 'введите кол-во')\n                    .required('это обязатенльое поле'),\n                color_id: Yup\n                    .string()\n                    .min(4, '4')\n                    .max(4, '4')\n                    .required('Это обязательное поле')\n            }).required()\n        )\n    })\n\n    const initialValues = {\n        // address: 'chreshatyk',\n        brand: 'DMC',\n        order: [\n            {\n                quantity: '',\n                color_id: ''\n            }\n        ]\n    }\n\n    return (\n        <>\n            <Formik\n                validateOnChange={true}\n                initialValues={initialValues}\n                validationSchema={validationSchema}\n                onSubmit={async (values, {setSubmitting}) => {\n                    console.log('post')\n                    const {brand : brandName, order} = values;\n                    const createBrand = await request('/ropes/addRopeBrand', 'POST', {brandName});\n                    const addRopesItems = await request('/ropes/addRopeItem', 'POST', {order, brandName})\n                    console.log(createBrand);\n                    console.log(values);\n                    setSubmitting(false);\n                }}\n            >\n                {({values, handleSubmit, errors, touched, setTouched}) => (\n                    <Form onSubmit={handleSubmit}>\n                        <div className={styles.orderSameData}>\n                            {/*<div>*/}\n                            {/*    Магазин:*/}\n                            {/*    <Field as='select' name=\"address\" id=\"address\">*/}\n                            {/*        <option value=\"creshatyk\">Крешатик</option>*/}\n                            {/*        <option value=\"darnitsa\">Дарница</option>*/}\n                            {/*        <option value=\"teremki\">Теремки</option>*/}\n                            {/*    </Field>*/}\n                            {/*</div>*/}\n\n                            <div>\n                                Производитель:\n                                <Field as='select' name=\"brand\" id=\"brand\">\n                                    <option value=\"dmc\">DMC</option>\n                                    <option value=\"ideal\">IDEAL</option>\n                                    <option value=\"kirovo\">KIROVO</option>\n                                </Field>\n                            </div>\n                        </div>\n\n                        <FieldArray name={'order'}>\n                            {({push, remove}) => (\n\n                                <>\n                                    <div className={styles.formWrapper}>\n                                        {\n                                            values.order.map((x, index) => {\n                                                return (\n                                                    <div className={styles.form}>\n                                                        <div className={styles.inputsWrapper}>\n                                                            <div className={styles.inputLabel}>\n                                                                <label>Количество:</label>\n                                                                <div className={styles.inputContainer}>\n                                                                    <Field className={styles.quantityInput} name={`order.${index}.quantity`}/>\n                                                                </div>\n                                                                <span className={styles.errorMsg}><ErrorMessage name={`order.${index}.quantity`}/></span>\n                                                            </div>\n                                                            <div className={styles.inputLabel}>\n                                                                <label>Цвет №:</label>\n                                                                <div className={styles.inputContainer}>\n                                                                    <Field name={`order.${index}.color_id`}/>\n                                                                </div>\n                                                                <span className={styles.errorMsg}><ErrorMessage name={`order.${index}.color_id`}/></span>\n                                                            </div>\n                                                        </div>\n                                                        <button onClick={() => remove(index)}>Удалить</button>\n                                                    </div>\n                                                )\n                                            })\n                                        }\n                                    </div>\n\n                                    <div className={styles.orderButtons}>\n                                        <button type={'submit'} className={styles.orderBtn}>Оформить заказ</button>\n                                        <button onClick={() => {\n                                            push({quantity: '', color_id: ''})\n                                        }} className={styles.orderBtn}>\n                                            Добавить цвет\n                                        </button>\n                                    </div>\n                                </>\n                            )}\n                        </FieldArray>\n                    </Form>\n                )}\n            </Formik>\n        </>\n    );\n};\n\nexport default OrderField;"]},"metadata":{},"sourceType":"module"}
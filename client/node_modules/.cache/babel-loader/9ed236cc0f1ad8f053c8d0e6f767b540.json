{"ast":null,"code":"var _jsxFileName = \"/Users/etimur/Desktop/vdsh/client/src/Components/MenuBarLink/MenuBarLink.js\";\nimport React, { useEffect, useState } from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport styles from './MenuBarLink.module.scss';\nimport Icons from \"../Icons/Icons\";\n\nconst MenuBarLink = _ref => {\n  let {\n    icon = 'userIcon',\n    path,\n    name,\n    color,\n    isActive\n  } = _ref;\n  const [isHovered, setIsHovered] = useState(false);\n  const [linkStyle, setLinkStyle] = useState(`${styles.link}`);\n  useEffect(() => {\n    if (isActive) {\n      setLinkStyle(`${styles.activeLink}`);\n    } else {\n      setLinkStyle(`${styles.link}`);\n    }\n  }, [isActive]);\n\n  const handleMouseEnter = () => {\n    setIsHovered(!isHovered);\n  };\n\n  return /*#__PURE__*/React.createElement(NavLink, {\n    className: linkStyle,\n    to: path,\n    onMouseEnter: () => handleMouseEnter(),\n    onMouseLeave: () => handleMouseEnter(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: styles.li,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.iconWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Icons, {\n    type: icon,\n    width: '35px',\n    height: '35px',\n    color: isHovered || isActive ? '#6495EDFF' : color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, name)));\n};\n\nexport default MenuBarLink;","map":{"version":3,"sources":["/Users/etimur/Desktop/vdsh/client/src/Components/MenuBarLink/MenuBarLink.js"],"names":["React","useEffect","useState","NavLink","styles","Icons","MenuBarLink","icon","path","name","color","isActive","isHovered","setIsHovered","linkStyle","setLinkStyle","link","activeLink","handleMouseEnter","li","iconWrapper","text"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,WAAW,GAAG,QAAsD;AAAA,MAArD;AAACC,IAAAA,IAAI,GAAG,UAAR;AAAoBC,IAAAA,IAApB;AAA0BC,IAAAA,IAA1B;AAAgCC,IAAAA,KAAhC;AAAuCC,IAAAA;AAAvC,GAAqD;AAEtE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAE,GAAEE,MAAM,CAACY,IAAK,EAAhB,CAA1C;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,QAAJ,EAAc;AACVI,MAAAA,YAAY,CAAE,GAAEX,MAAM,CAACa,UAAW,EAAtB,CAAZ;AACH,KAFD,MAEO;AACHF,MAAAA,YAAY,CAAE,GAAEX,MAAM,CAACY,IAAK,EAAhB,CAAZ;AACH;AACJ,GANQ,EAMN,CAACL,QAAD,CANM,CAAT;;AAQA,QAAMO,gBAAgB,GAAG,MAAM;AAC3BL,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH,GAFD;;AAIA,sBACI,oBAAC,OAAD;AACI,IAAA,SAAS,EAAEE,SADf;AAEI,IAAA,EAAE,EAAEN,IAFR;AAGI,IAAA,YAAY,EAAE,MAAMU,gBAAgB,EAHxC;AAII,IAAA,YAAY,EAAE,MAAMA,gBAAgB,EAJxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMQ;AAAI,IAAA,SAAS,EAAEd,MAAM,CAACe,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAEf,MAAM,CAACgB,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAEb,IADV;AAEI,IAAA,KAAK,EAAE,MAFX;AAGI,IAAA,MAAM,EAAE,MAHZ;AAII,IAAA,KAAK,EAAEK,SAAS,IAAID,QAAb,GAAwB,WAAxB,GAAsCD,KAJjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eASI;AAAM,IAAA,SAAS,EAAEN,MAAM,CAACiB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BZ,IAA/B,CATJ,CANR,CADJ;AAqBH,CAtCD;;AAwCA,eAAeH,WAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport styles from './MenuBarLink.module.scss';\nimport Icons from \"../Icons/Icons\";\n\nconst MenuBarLink = ({icon = 'userIcon', path, name, color, isActive}) => {\n\n    const [isHovered, setIsHovered] = useState(false);\n    const [linkStyle, setLinkStyle] = useState(`${styles.link}`)\n\n    useEffect(() => {\n        if (isActive) {\n            setLinkStyle(`${styles.activeLink}`);\n        } else {\n            setLinkStyle(`${styles.link}`);\n        }\n    }, [isActive])\n\n    const handleMouseEnter = () => {\n        setIsHovered(!isHovered);\n    }\n\n    return (\n        <NavLink\n            className={linkStyle}\n            to={path}\n            onMouseEnter={() => handleMouseEnter()}\n            onMouseLeave={() => handleMouseEnter()}\n        >\n                <li className={styles.li}>\n                    <span className={styles.iconWrapper}>\n                        <Icons\n                            type={icon}\n                            width={'35px'}\n                            height={'35px'}\n                            color={isHovered || isActive ? '#6495EDFF' : color}\n                        />\n                    </span>\n                    <span className={styles.text}>{name}</span>\n                </li>\n        </NavLink>\n\n    );\n};\n\nexport default MenuBarLink;"]},"metadata":{},"sourceType":"module"}
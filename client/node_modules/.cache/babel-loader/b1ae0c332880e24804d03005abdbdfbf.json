{"ast":null,"code":"var _jsxFileName = \"/Users/etimur/Desktop/vdsh/client/src/Pages/OrdersPage/OrdersPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport styles from './OrdersPage.module.scss';\nimport Button from \"../../Components/Button/Button\";\nimport { getAllRopesBrand } from \"../../http/ropesAPI\";\nimport { getAllShops } from \"../../http/shopAPI\";\n\nconst OrdersPage = () => {\n  const [shopAddresses, setShopAddresses] = useState(null);\n  const [brands, setBrands] = useState(null);\n  useEffect(async () => {\n    // здесь нужно получать данные из базы, адресса магазинов и названия брендов и их id\n    const brands = await getAllRopesBrand();\n    const shops = await getAllShops();\n    setShopAddresses(shops.data);\n    setBrands(brands.data);\n    console.log(shops.data);\n  }, []);\n  const ordersByShop = shopAddresses !== null && shopAddresses.map(shop => {\n    const {\n      id,\n      address\n    } = shop;\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, address);\n  });\n  const orderByBrand = brands !== null && brands.map(brand => {\n    const {\n      id,\n      brandName\n    } = brand;\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: brandName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, brandName);\n  }); // для селектов нужно будет получать инфу из бд\n  // сделать селекты для выбора магазина и бренада\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.pageContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"\\u0417\\u0430\\u043A\\u0430\\u0437\\u044B \\u0441\\u043E \\u0441\\u043A\\u043B\\u0430\\u0434\\u0430\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.headerButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0435\\u0442\\u0435 \\u043C\\u0430\\u0433\\u0430\\u0437\\u0438\\u043D: \"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"\",\n    id: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, ordersByShop)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, \"select brand\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"\",\n    id: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, orderByBrand)))), /*#__PURE__*/React.createElement(\"main\", {\n    className: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default OrdersPage;","map":{"version":3,"sources":["/Users/etimur/Desktop/vdsh/client/src/Pages/OrdersPage/OrdersPage.js"],"names":["React","useEffect","useState","styles","Button","getAllRopesBrand","getAllShops","OrdersPage","shopAddresses","setShopAddresses","brands","setBrands","shops","data","console","log","ordersByShop","map","shop","id","address","orderByBrand","brand","brandName","pageContainer","header","title","headerButtons","body"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAAQC,gBAAR,QAA+B,qBAA/B;AACA,SAAQC,WAAR,QAA0B,oBAA1B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,IAAD,CAApC;AAGAD,EAAAA,SAAS,CAAC,YAAY;AAClB;AACA,UAAMS,MAAM,GAAG,MAAML,gBAAgB,EAArC;AACA,UAAMO,KAAK,GAAG,MAAMN,WAAW,EAA/B;AACAG,IAAAA,gBAAgB,CAACG,KAAK,CAACC,IAAP,CAAhB;AACAF,IAAAA,SAAS,CAACD,MAAM,CAACG,IAAR,CAAT;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,IAAlB;AACH,GAPQ,EAON,EAPM,CAAT;AAUA,QAAMG,YAAY,GAAGR,aAAa,KAAK,IAAlB,IAA0BA,aAAa,CAACS,GAAd,CAAkBC,IAAI,IAAI;AACrE,UAAM;AAACC,MAAAA,EAAD;AAAKC,MAAAA;AAAL,QAAgBF,IAAtB;AACA,wBACI;AAAQ,MAAA,KAAK,EAAEE,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBA,OAAzB,CADJ;AAGH,GAL8C,CAA/C;AAOA,QAAMC,YAAY,GAAGX,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACO,GAAP,CAAWK,KAAK,IAAI;AACxD,UAAM;AAACH,MAAAA,EAAD;AAAKI,MAAAA;AAAL,QAAkBD,KAAxB;AACA,wBACI;AAAQ,MAAA,KAAK,EAAEC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BA,SAA3B,CADJ;AAGH,GALuC,CAAxC,CAtBqB,CA8BrB;AACA;;AACA,sBACI;AAAK,IAAA,SAAS,EAAEpB,MAAM,CAACqB,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAErB,MAAM,CAACsB,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAEtB,MAAM,CAACuB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8FADJ,eAEI;AAAK,IAAA,SAAS,EAAEvB,MAAM,CAACwB,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qGADJ,eAEI;AAAQ,IAAA,IAAI,EAAC,EAAb;AAAgB,IAAA,EAAE,EAAC,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,YADL,CAFJ,CADJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAQ,IAAA,IAAI,EAAC,EAAb;AAAgB,IAAA,EAAE,EAAC,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKK,YADL,CAFJ,CAXJ,CAFJ,CADJ,eA8BI;AAAM,IAAA,SAAS,EAAElB,MAAM,CAACyB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BJ,CADJ;AAoCH,CApED;;AAsEA,eAAerB,UAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport styles from './OrdersPage.module.scss';\nimport Button from \"../../Components/Button/Button\";\nimport {getAllRopesBrand} from \"../../http/ropesAPI\";\nimport {getAllShops} from \"../../http/shopAPI\";\n\nconst OrdersPage = () => {\n    const [shopAddresses, setShopAddresses] = useState(null);\n    const [brands, setBrands] = useState(null);\n\n\n    useEffect(async () => {\n        // здесь нужно получать данные из базы, адресса магазинов и названия брендов и их id\n        const brands = await getAllRopesBrand();\n        const shops = await getAllShops();\n        setShopAddresses(shops.data);\n        setBrands(brands.data);\n        console.log(shops.data);\n    }, [])\n\n\n    const ordersByShop = shopAddresses !== null && shopAddresses.map(shop => {\n        const {id, address} = shop;\n        return (\n            <option value={address}>{address}</option>\n        )\n    })\n\n    const orderByBrand = brands !== null && brands.map(brand => {\n        const {id, brandName} = brand;\n        return (\n            <option value={brandName}>{brandName}</option>\n        )\n    })\n\n\n    // для селектов нужно будет получать инфу из бд\n    // сделать селекты для выбора магазина и бренада\n    return (\n        <div className={styles.pageContainer}>\n            <header className={styles.header}>\n                <h1 className={styles.title}>Заказы со склада</h1>\n                <div className={styles.headerButtons}>\n                    <div>\n                        <span>Выберете магазин: </span>\n                        <select name=\"\" id=\"\">\n                            {ordersByShop}\n                            {/*<option value=\"\">rhrhrh</option>*/}\n                            {/*<option value=\"\">rhrhrh</option>*/}\n                            {/*<option value=\"\">rhrhrh</option>*/}\n                            {/*<option value=\"\">rhrhrh</option>*/}\n                        </select>\n                    </div>\n                    <div>\n                        <span>select brand</span>\n                        <select name=\"\" id=\"\">\n                            {orderByBrand}\n                            {/*<option value=\"\">djjdjd</option>*/}\n                            {/*<option value=\"\">djjdjd</option>*/}\n                            {/*<option value=\"\">djjdjd</option>*/}\n                            {/*<option value=\"\">djjdjd</option>*/}\n                            {/*<option value=\"\">djjdjd</option>*/}\n                        </select>\n                    </div>\n                    {/*<Button text={'Заказы по магазинам'} onClick={() => ordersByShop()} />*/}\n                    {/*<Button text={'Заказы по брендам'} onClick={() => orderByBrand()} />*/}\n                </div>\n\n            </header>\n            <main className={styles.body}>\n\n            </main>\n        </div>\n    );\n};\n\nexport default OrdersPage;"]},"metadata":{},"sourceType":"module"}
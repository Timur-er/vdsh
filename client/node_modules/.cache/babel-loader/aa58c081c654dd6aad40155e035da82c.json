{"ast":null,"code":"var _jsxFileName = \"/Users/etimur/Desktop/vdsh/client/src/Pages/RopesInStockPage/RopesInStockPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport styles from './RopesInStockPage.module.scss';\nimport { getAllRopesBrand, getRopesByBrand } from \"../../http/ropesAPI\";\nimport RopesTable from \"../../Components/RopesTable/RopesTable\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setOrderBrandOperation, setShopAddressOperation } from \"../../store/ropesOrder/operations\";\nimport { getRopesOrder } from \"../../store/ropesOrder/selectors\";\nimport { getShopId } from \"../../store/User/selectors\";\nimport Button from \"../../Components/Button/Button\";\n\nconst RopesInStockPage = () => {\n  const [ropes, setRopes] = useState(null);\n  const [ropesBrand, setRopesBrand] = useState([]);\n  const shop_id = useSelector(getShopId);\n  const order = useSelector(getRopesOrder);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    async function fetchedBrands() {\n      const brands = await getAllRopesBrand();\n      return brands.data;\n    }\n\n    dispatch(setShopAddressOperation(shop_id));\n    fetchedBrands().then(data => setRopesBrand(data));\n  }, [dispatch, shop_id]);\n\n  const getRopes = async (brand, id) => {\n    if (order.length > 0) {\n      alert('Вы не подтвердили заказ');\n    } else {\n      const ropes = await getRopesByBrand(id);\n      dispatch(setOrderBrandOperation(brand, id));\n      setRopes(ropes.data);\n    }\n  };\n\n  const selectBrandButtons = ropesBrand.map(brand => {\n    const {\n      brandName,\n      id\n    } = brand;\n    return /*#__PURE__*/React.createElement(Button, {\n      onClick: () => getRopes(brandName, id),\n      text: brandName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 16\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.pageContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0435\\u0442\\u0435 \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0438\\u0442\\u0435\\u043B\\u044F:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.headerButtons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, selectBrandButtons)), /*#__PURE__*/React.createElement(\"main\", {\n    className: styles.ropesTableSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, ropes !== null && /*#__PURE__*/React.createElement(RopesTable, {\n    ropes: ropes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 36\n    }\n  })));\n};\n\nexport default RopesInStockPage;","map":{"version":3,"sources":["/Users/etimur/Desktop/vdsh/client/src/Pages/RopesInStockPage/RopesInStockPage.js"],"names":["React","useEffect","useState","styles","getAllRopesBrand","getRopesByBrand","RopesTable","useDispatch","useSelector","setOrderBrandOperation","setShopAddressOperation","getRopesOrder","getShopId","Button","RopesInStockPage","ropes","setRopes","ropesBrand","setRopesBrand","shop_id","order","dispatch","fetchedBrands","brands","data","then","getRopes","brand","id","length","alert","selectBrandButtons","map","brandName","pageContainer","header","title","headerButtons","ropesTableSection"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAAQC,gBAAR,EAA0BC,eAA1B,QAAgD,qBAAhD;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,sBAAR,EAAgCC,uBAAhC,QAA8D,mCAA9D;AACA,SAAQC,aAAR,QAA4B,kCAA5B;AACA,SAAQC,SAAR,QAAwB,4BAAxB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMiB,OAAO,GAAGX,WAAW,CAACI,SAAD,CAA3B;AACA,QAAMQ,KAAK,GAAGZ,WAAW,CAACG,aAAD,CAAzB;AACA,QAAMU,QAAQ,GAAGd,WAAW,EAA5B;AAEAN,EAAAA,SAAS,CAAE,MAAM;AACb,mBAAeqB,aAAf,GAA+B;AAC3B,YAAMC,MAAM,GAAG,MAAMnB,gBAAgB,EAArC;AACA,aAAOmB,MAAM,CAACC,IAAd;AACH;;AACDH,IAAAA,QAAQ,CAACX,uBAAuB,CAACS,OAAD,CAAxB,CAAR;AACAG,IAAAA,aAAa,GAAGG,IAAhB,CAAqBD,IAAI,IAAIN,aAAa,CAACM,IAAD,CAA1C;AACH,GAPQ,EAON,CAACH,QAAD,EAAWF,OAAX,CAPM,CAAT;;AASA,QAAMO,QAAQ,GAAG,OAAOC,KAAP,EAAcC,EAAd,KAAqB;AAClC,QAAIR,KAAK,CAACS,MAAN,GAAe,CAAnB,EAAsB;AAClBC,MAAAA,KAAK,CAAC,yBAAD,CAAL;AACH,KAFD,MAEO;AACH,YAAMf,KAAK,GAAG,MAAMV,eAAe,CAACuB,EAAD,CAAnC;AACAP,MAAAA,QAAQ,CAACZ,sBAAsB,CAACkB,KAAD,EAAQC,EAAR,CAAvB,CAAR;AACAZ,MAAAA,QAAQ,CAACD,KAAK,CAACS,IAAP,CAAR;AACH;AACJ,GARD;;AAUA,QAAMO,kBAAkB,GAAGd,UAAU,CAACe,GAAX,CAAeL,KAAK,IAAI;AAC/C,UAAM;AAACM,MAAAA,SAAD;AAAYL,MAAAA;AAAZ,QAAkBD,KAAxB;AACA,wBAAO,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMD,QAAQ,CAACO,SAAD,EAAYL,EAAZ,CAA/B;AAAgD,MAAA,IAAI,EAAEK,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAH0B,CAA3B;AAKA,sBAEI;AAAK,IAAA,SAAS,EAAE9B,MAAM,CAAC+B,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAE/B,MAAM,CAACgC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAEhC,MAAM,CAACiC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wIADJ,eAEI;AAAK,IAAA,SAAS,EAAEjC,MAAM,CAACkC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,kBADL,CAFJ,CADJ,eAQI;AAAM,IAAA,SAAS,EAAE5B,MAAM,CAACmC,iBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKvB,KAAK,KAAK,IAAV,iBAAkB,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEA,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADvB,CARJ,CAFJ;AAgBH,CA/CD;;AAiDA,eAAeD,gBAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport styles from './RopesInStockPage.module.scss';\nimport {getAllRopesBrand, getRopesByBrand} from \"../../http/ropesAPI\";\nimport RopesTable from \"../../Components/RopesTable/RopesTable\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setOrderBrandOperation, setShopAddressOperation} from \"../../store/ropesOrder/operations\";\nimport {getRopesOrder} from \"../../store/ropesOrder/selectors\";\nimport {getShopId} from \"../../store/User/selectors\";\nimport Button from \"../../Components/Button/Button\";\n\nconst RopesInStockPage = () => {\n    const [ropes, setRopes] = useState(null);\n    const [ropesBrand, setRopesBrand] = useState([]);\n    const shop_id = useSelector(getShopId);\n    const order = useSelector(getRopesOrder);\n    const dispatch = useDispatch();\n\n    useEffect( () => {\n        async function fetchedBrands() {\n            const brands = await getAllRopesBrand();\n            return brands.data;\n        }\n        dispatch(setShopAddressOperation(shop_id));\n        fetchedBrands().then(data => setRopesBrand(data))\n    }, [dispatch, shop_id])\n\n    const getRopes = async (brand, id) => {\n        if (order.length > 0) {\n            alert('Вы не подтвердили заказ')\n        } else {\n            const ropes = await getRopesByBrand(id)\n            dispatch(setOrderBrandOperation(brand, id))\n            setRopes(ropes.data)\n        }\n    }\n\n    const selectBrandButtons = ropesBrand.map(brand => {\n        const {brandName, id} = brand;\n        return <Button onClick={() => getRopes(brandName, id)} text={brandName} />\n    })\n\n    return (\n\n        <div className={styles.pageContainer}>\n            <header className={styles.header}>\n                <h1 className={styles.title}>Выберете производителя:</h1>\n                <div className={styles.headerButtons}>\n                    {selectBrandButtons}\n                </div>\n            </header>\n\n            <main className={styles.ropesTableSection}>\n                {ropes !== null && <RopesTable ropes={ropes}/>}\n            </main>\n        </div>\n\n    );\n};\n\nexport default RopesInStockPage;"]},"metadata":{},"sourceType":"module"}
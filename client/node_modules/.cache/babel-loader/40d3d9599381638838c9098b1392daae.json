{"ast":null,"code":"import { useCallback, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { loginUserOperation } from \"../store/User/operations\";\nimport { getNewAccessTokenAPI } from \"../http/userAPI\";\nexport const useAuth = () => {\n  // const [email, setEmail] = useState();\n  // const [name, setName] = useState();\n  // const [surname, setSurname] = useState();\n  // const [shop_id, setShopId] = useState();\n  // const [token, setToken] = useState();\n  // const [isActivated, setIsActivated] = useState(false)\n  const dispatch = useDispatch();\n  const login = useCallback((user_id, email, name, surname, shop_id, role, jwtToken, isActivated) => {\n    // setEmail(email);\n    // setName(name);\n    // setSurname(surname);\n    // setShopId(shop_id);\n    // setToken(jwtToken);\n    // setIsActivated(isActivated)\n    dispatch(loginUserOperation(user_id, email, name, surname, shop_id, role, jwtToken, isActivated));\n    localStorage.setItem('jwtToken', JSON.stringify(jwtToken));\n  }, []);\n  useEffect(async () => {\n    const token = JSON.parse(localStorage.getItem('jwtToken'));\n\n    if (token) {\n      const newAccessToken = await getNewAccessTokenAPI();\n      const newToken = newAccessToken.data.accessToken;\n      const {\n        user_id,\n        email,\n        name,\n        surname,\n        role,\n        shop_id,\n        isActivated\n      } = newAccessToken.data.user;\n      login(user_id, email, name, surname, shop_id, role, newToken, isActivated);\n    }\n  }, [login]);\n  return {\n    login\n  };\n};","map":{"version":3,"sources":["/Users/etimur/Desktop/vdsh/client/src/Hooks/auth.hook.js"],"names":["useCallback","useEffect","useDispatch","loginUserOperation","getNewAccessTokenAPI","useAuth","dispatch","login","user_id","email","name","surname","shop_id","role","jwtToken","isActivated","localStorage","setItem","JSON","stringify","token","parse","getItem","newAccessToken","newToken","data","accessToken","user"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,SAArB,QAAqC,OAArC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,kBAAR,QAAiC,0BAAjC;AACA,SAAQC,oBAAR,QAAmC,iBAAnC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA,QAAMK,KAAK,GAAGP,WAAW,CAAE,CAACQ,OAAD,EAAUC,KAAV,EAAiBC,IAAjB,EAAuBC,OAAvB,EAAgCC,OAAhC,EAAyCC,IAAzC,EAA+CC,QAA/C,EAAyDC,WAAzD,KAAyE;AAChG;AACA;AACA;AACA;AACA;AACA;AAEAT,IAAAA,QAAQ,CAACH,kBAAkB,CAACK,OAAD,EAAUC,KAAV,EAAiBC,IAAjB,EAAuBC,OAAvB,EAAgCC,OAAhC,EAAyCC,IAAzC,EAA+CC,QAA/C,EAAyDC,WAAzD,CAAnB,CAAR;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,QAAf,CAAjC;AACH,GAVwB,EAUtB,EAVsB,CAAzB;AAYAb,EAAAA,SAAS,CAAC,YAAY;AAClB,UAAMmB,KAAK,GAAGF,IAAI,CAACG,KAAL,CAAWL,YAAY,CAACM,OAAb,CAAqB,UAArB,CAAX,CAAd;;AACA,QAAIF,KAAJ,EAAW;AACP,YAAMG,cAAc,GAAG,MAAMnB,oBAAoB,EAAjD;AACA,YAAMoB,QAAQ,GAAGD,cAAc,CAACE,IAAf,CAAoBC,WAArC;AACA,YAAM;AAAClB,QAAAA,OAAD;AAAUC,QAAAA,KAAV;AAAiBC,QAAAA,IAAjB;AAAuBC,QAAAA,OAAvB;AAAgCE,QAAAA,IAAhC;AAAsCD,QAAAA,OAAtC;AAA+CG,QAAAA;AAA/C,UAA8DQ,cAAc,CAACE,IAAf,CAAoBE,IAAxF;AACApB,MAAAA,KAAK,CAACC,OAAD,EAAUC,KAAV,EAAiBC,IAAjB,EAAuBC,OAAvB,EAAgCC,OAAhC,EAAyCC,IAAzC,EAA+CW,QAA/C,EAAyDT,WAAzD,CAAL;AACH;AACJ,GARQ,EAQN,CAACR,KAAD,CARM,CAAT;AAUA,SAAO;AAACA,IAAAA;AAAD,GAAP;AACH,CAhCM","sourcesContent":["import {useCallback, useEffect} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {loginUserOperation} from \"../store/User/operations\";\nimport {getNewAccessTokenAPI} from \"../http/userAPI\";\n\nexport const useAuth = () => {\n    // const [email, setEmail] = useState();\n    // const [name, setName] = useState();\n    // const [surname, setSurname] = useState();\n    // const [shop_id, setShopId] = useState();\n    // const [token, setToken] = useState();\n    // const [isActivated, setIsActivated] = useState(false)\n    const dispatch = useDispatch();\n\n    const login = useCallback( (user_id, email, name, surname, shop_id, role, jwtToken, isActivated) => {\n        // setEmail(email);\n        // setName(name);\n        // setSurname(surname);\n        // setShopId(shop_id);\n        // setToken(jwtToken);\n        // setIsActivated(isActivated)\n\n        dispatch(loginUserOperation(user_id, email, name, surname, shop_id, role, jwtToken, isActivated))\n        localStorage.setItem('jwtToken', JSON.stringify(jwtToken));\n    }, [])\n\n    useEffect(async () => {\n        const token = JSON.parse(localStorage.getItem('jwtToken'));\n        if (token) {\n            const newAccessToken = await getNewAccessTokenAPI();\n            const newToken = newAccessToken.data.accessToken;\n            const {user_id, email, name, surname, role, shop_id, isActivated} = newAccessToken.data.user;\n            login(user_id, email, name, surname, shop_id, role, newToken, isActivated);\n        }\n    }, [login])\n\n    return {login}\n}"]},"metadata":{},"sourceType":"module"}